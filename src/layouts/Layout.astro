---
import { SEO } from "astro-seo";
import Footer from "@components/footer.astro";
import Navbar from "@components/navbar/navbar.astro";
// import { HeadHrefLangs } from "astro-i18next/components";
import i18next from "i18next";
import "@fontsource-variable/inter";
// import Cookie from "@components/cookie.astro";
import { ViewTransitions } from "astro:transitions";

export interface Props {
  title: string;
  lang: string;
}
const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL(
  "/meta/opengraph.png",
  Astro.site,
).toString();

const { title, lang = null } = Astro.props;

const makeTitle = title
  ? title + " | " + "Monolithon"
  : "Monolithon - ERPNext solutions";
---

<!doctype html>
<html lang={lang ?? i18next.language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />

    <meta name="googlebot" content="index, follow" />
    <slot name="rich-text-schema" />
    <script src="https://cookiechimp.com/widget/N8ptMm.js" is:inline></script>

    <script>
      document.addEventListener("astro:page-load", loadChimp);
      function loadChimp() {
        var scriptEle = document.createElement("script");
        scriptEle.setAttribute(
          "src",
          "https://cookiechimp.com/widget/N8ptMm.js",
        );
        scriptEle.setAttribute("data-astro-exec", "");
        document.head.appendChild(scriptEle);
      }
    </script>
    <link
      rel="icon"
      type="image/svg+xml"
      href="logo/images/monolithon-fav.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="logo/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="logo/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="logo/favicon-16x16.png"
    />
    <link rel="manifest" href="logo/site.webmanifest" />
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#ffffff" />

    <meta name="generator" content={Astro.generator} />

    <ViewTransitions />
    <!-- Global CSS -->
    <link rel="stylesheet" href="/index.css" />
    <!-- rss -->
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Monolithon"
      href={`${Astro.site}rss.xml`}
    />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Monolithon"
      href={`${Astro.site}rss-hu.xml`}
    />

    <SEO
      title={makeTitle}
      description="ERPNext, Odoo, eCommerce, Shopify, Static Site Generator, astro.build, Queue Management System, Frappe, n8n, Mautic"
      canonical={canonicalURL}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: `Monolithon`,
          image: resolvedImageWithDomain,
        },
        image: {
          alt: "Monolithon Homepage Screenshot",
        },
      }}
    />
    <!-- Google Tag Manager -->
    <script src="https://service.monolithon.com/gtag/js?id=P4LTKG3" is:inline
    ></script>
    <!-- End Google Tag Manager -->

    <script
      type="text/plain"
      data-category="analytics"
      data-service="Google Analytics"
      is:inline
    >
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "P4LTKG3");

      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://service.monolithon.com/tyynmnmx.js?st=" + i + dl + "";
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "P4LTKG3");
    </script>
  </head>
  <!-- <Cookie /> -->
  <body class="dark:bg-stone-950">
    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://service.monolithon.com/ns.html?id=GTM-P4LTKG3"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->
    <Navbar />
    <slot />
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>
    <script>
      /** This section is only needed once per page if manually copying **/
      //@ts-expect-error
      if (typeof MauticSDKLoaded == "undefined") {
        var MauticSDKLoaded = true;
        var head = document.getElementsByTagName("head")[0];
        var script = document.createElement("script");
        script.type = "text/javascript";
        script.src =
          "https://asset.monolithon.com/media/js/mautic-form.js?vea43f1e4";
        script.onload = function () {
          //@ts-expect-error
          MauticSDK.onLoad();
        };
        head.appendChild(script);
        var MauticDomain = "https://asset.monolithon.com";
        var MauticLang = {
          submittingMessage: "Please wait...",
        };
        //@ts-expect-error
      } else if (typeof MauticSDK != "undefined") {
        //@ts-expect-error
        MauticSDK.onLoad();
      }
    </script>
    <script>
      (function (w, d, t, u, n, a, m) {
        w["MauticTrackingObject"] = n;
        (w[n] =
          w[n] ||
          function () {
            (w[n].q = w[n].q || []).push(arguments);
          }),
          //@ts-expect-error
          (a = d.createElement(t)),
          //@ts-expect-error
          (m = d.getElementsByTagName(t)[0]);
        //@ts-expect-error
        a.async = 1;
        //@ts-expect-error
        a.src = u;
        //@ts-expect-error
        m.parentNode.insertBefore(a, m);
      })(
        window,
        document,
        "script",
        "https://asset.monolithon.com/mtc.js",
        "mt",
      );
      //@ts-expect-error
      mt("send", "pageview");
    </script>
    <script src="https://cdn.paddle.com/paddle/v2/paddle.js" is:inline></script>
    <script>
      if (import.meta.env.PUBLIC_ENVIRONMENT !== "production") {
        //@ts-expect-error
        Paddle.Environment.set("sandbox");
      }
      //@ts-expect-error
      Paddle.Setup({
        token: import.meta.env.PUBLIC_PADDLE_CLIENT_API_KEY,
        checkout: {
          settings: {
            displayMode: "overlay",
            theme: "light",
            locale: "en",
          },
        },
      });
    </script>

    <Footer />
  </body>
</html>
