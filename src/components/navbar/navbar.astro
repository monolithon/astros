---
import Link from "@components/ui/link.astro";
import { localizePath } from "astro-i18next";
import { t } from "i18next";
import Languageselector from "@components/languageselector.astro";

const logo = 'logo.title'

export const menuitems = [
	{
		title: "ERPNext ",
		path: "path_header.erpnext",

	},
	{
		title: "header.implementation",
		path: "path_header.implementation",
	},
	{
		title: "header.invoicing",
		path: "path_header.invoicing",
	},
	{
		title: "header.accounting",
		path: "path_header.accounting",
	},
];
---

<div
	x-data="{open: window.innerWidth < 768 ? false : true}"
	class="flex flex-col max-w-screen-xl py-2 px-4 mx-auto md:items-center md:justify-between md:flex-row md:px-2 lg:px-0 z-10 md:pt-2 relative">
	<div class="p-4 flex flex-row items-center justify-between">
		<a
			href={localizePath("/")}
			class="flex gap-3 items-center text-[18px] text-gray-900 rounded-lg dark:text-white focus:outline-none focus:shadow-outline">
			{t(logo)}
		</a>
		<button id="menuToggle" class="md:hidden text-gray-500 w-10 h-10 relative focus:outline-none">
			<span class="sr-only">Open main menu</span>
			<div class="block w-5 absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2">
				<span
					aria-hidden="true"
					class=" block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'rotate-45': open,' -translate-y-1.5': !open }">
				</span>
				<span
					aria-hidden="true"
					class="block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'opacity-0': open } ">
				</span>
				<span
					aria-hidden="true"
					class="block absolute h-0.5 w-5 bg-current transform transition duration-200 ease-in-out"
					:class="{'-rotate-45': open, ' translate-y-1.5': !open}">
				</span>
			</div>
		</button>
	</div>
	<nav class="flex" id="nav">
		<div class="flex flex-col flex-grow  gap-4 md:justify-end md:items-center md:flex md:flex-row md:mx-auto">
			{
				menuitems.map((item) =>
					 (
						<Link
							href={localizePath(t(item.path))}
							style="hover"
							size="sm"
							x-data="{ isActive: false }"
							x-init={`() => {
								const path = $el.getAttribute('data-path');
								const checkPath = () => {
									isActive = window.location.pathname === path ||
												window.location.pathname === path + '/' ||
												window.location.pathname === '/hu' + path ||
												window.location.pathname === '/hu' + path + '/';
								};
								checkPath();
								window.addEventListener('popstate', checkPath);
							}`}
							:class="{ 'text-[#2490EF] dark:bg-[#2490EF]': isActive }"
							data-path={item.path}
						>
							{t(item.title)}
						</Link>
					)
				)
			}
		</div>
		<div class="mt-4 md:mt-0 flex flex-col md:flex-row gap-8">
			<Languageselector
			showFlag={false}
			languageMapping={{ en: "English", hu: "Magyar " }}
			class="appearance-none py-1 px-2 rounded bg-slate-100 dark:bg-stone-950"
		/>
			<Link href="https://github.com/warpsi/astros" class="md:px-3 md:py-2 leading-6">
				{t("header.primary_button_text")}
			</Link>
		</div>
	</nav>
	<style>
		/* CSS */
/* The 'show' class will be used to toggle visibility of the navigation */
#nav {
  display: none; /* Start with the navigation hidden */
}

#nav.show {
  display: flex; /* Show the navigation when the 'show' class is applied */
}

	</style>
</div>

<script>
	// JavaScript
const toggle = document.querySelector('#menuToggle');
const nav = document.querySelector('#nav');

toggle?.addEventListener('click', () => {
  nav.classList.toggle('show');
});

// Add event listener to check window width on page load and window resize
window.addEventListener('load', checkWindowSize);
window.addEventListener('resize', checkWindowSize);

function checkWindowSize() {
  if (window.innerWidth > 790) {
    nav.classList.add('show');
  } else {
    nav.classList.remove('show');
  }
}

</script>

