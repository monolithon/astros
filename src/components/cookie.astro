<body class="dark:bg-stone-900">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@v2.x.x/dist/cookieconsent.css" />
	<script defer src="https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@v2.x.x/dist/cookieconsent.js"></script>
	<script>
		window.addEventListener("load", () => {
			const cc = initCookieConsent();

			cc.run({
				current_lang: "en",
				autoclear_cookies: true,
				page_scripts: true,

				languages: {
					en: {
						consent_modal: {
							title: "I use cookies",
							description: "Your cookie consent message here",
							primary_btn: {
								text: "Accept",
								role: "accept_all", //'accept_selected' or 'accept_all'
								callback: function () {
									// Code to execute when user accepts cookies
									initializeTracking();
								},
							},
							secondary_btn: {
								text: "Settings",
								role: "settings", //'settings' or 'accept_necessary'
							},
						},
						settings_modal: {
							title: "Cookie settings",
							save_settings_btn: "Save settings",
							accept_all_btn: "Accept all",
							reject_all_btn: "Reject all",
							close_btn_label: "Close",
							blocks: [
								{
									title: "Cookie usage",
									description: "Your cookie usage disclaimer",
								},
								{
									title: "Strictly necessary cookies",
									description: "Category description ... ",
									toggle: {
										value: "necessary",
										enabled: true,
										readonly: true,
									},
								},
								{
									title: "Analytics cookies",
									description: "Analytics description ... ",
									toggle: {
										value: "analytics",
										enabled: false,
										readonly: false,
										classback:function() {
											GTMAnalytics()
										}
									},
								},
							],
						},
					},
				},
			});
		});

		function initializeTracking() {
			(function (w, d, t, u, n, a, m) {
				w["MauticTrackingObject"] = n;
				(w[n] =
					w[n] ||
					function () {
						(w[n].q = w[n].q || []).push(arguments);
					}),
					(a = d.createElement(t)),
					(m = d.getElementsByTagName(t)[0]);
				a.async = 1;
				a.src = u;
				m.parentNode.insertBefore(a, m);
			})(window, document, "script", "http://asset.monolithon.com/mtc.js", "mt");

			mt("send", "pageview");
		}
		function GTMAnalytics() {
			(function (w, d, s, l, i) {
				w[l] = w[l] || [];
				w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
				var f = d.getElementsByTagName(s)[0],
					j = d.createElement(s),
					dl = l != "dataLayer" ? "&l=" + l : "";
				j.async = true;
				j.src = "https://service.monolithon.com/tyynmnmx.js?id=" + i + dl;
				f.parentNode.insertBefore(j, f);
			})(window, document, "script", "dataLayer", "GTM-P4LTKG3");
		}

	</script>
</body>
