---
import Button from "@components/ui/button.astro";
import Link from "@components/ui/link.astro";
---

<div
  class="flex min-h-full items-center justify-center px-4 py-12 sm:px-6 lg:px-8 h-[68vh]"
>
  <div class="w-full max-w-sm space-y-10">
    <div>
      <h2
        class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900 dark:text-gray-100"
      >
        Sign in to your account
      </h2>
    </div>
    <div class="space-y-6">
      <div class="relative -space-y-px rounded-md shadow-sm">
        <div
          class="pointer-events-none absolute inset-0 z-10 rounded-md ring-1 ring-inset ring-gray-300"
        >
        </div>
        <div>
          <label for="email" class="sr-only">Email address</label>
          <input
            id="email"
            name="email"
            type="email"
            autocomplete="email"
            required
            class="relative block px-4 w-full rounded-t-md border-0 py-1.5 text-gray-900 dark:text-gray-100 dark:bg-stone-950 ring-1 ring-inset ring-gray-100 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            placeholder="Email address"
          />
        </div>

        <div>
          <label for="password" class="sr-only">Email address</label>
          <input
            id="password"
            name="password"
            type="password"
            autocomplete="current-password"
            required
            class="relative block px-4 w-full rounded-b-md border-0 py-1.5 text-gray-900 dark:text-gray-100 dark:bg-stone-950 ring-1 ring-inset ring-gray-100 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
            placeholder="Password"
          />
        </div>
      </div>

      <div>
        <Button class="w-full" size="sm" id="loginButton">Sign in</Button>
      </div>
    </div>

    <p class="text-center text-sm leading-6 text-gray-500">
      Not a member?
      <Link style="muted" href="#" size="xs" class="text-left">Sign up</Link>
    </p>
  </div>
</div>
<script>
  const button = document.getElementById("loginButton");
  document.addEventListener("astro:page-load", () => {
    const getEmail = localStorage.getItem("email");
    const getSidCookie = document.cookie
      .split("; ")
      .find((row) => row.startsWith("sid="));
    if (getSidCookie) {
      window.location.href = `/dashboard?email=${getEmail}`;
    }
  });

  if (button) {
    button.addEventListener("click", async () => {
      const email = document.getElementById("email");
      const password = document.getElementById("password");
      if (email && password) {
        //@ts-expect-error
        const emailValue = email.value;
        //@ts-expect-error
        const passwordValue = password.value;
        var regex = /^[+\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,7}$/;
        if (regex.test(emailValue)) {
          const formData = new FormData();
          formData.append("usr", emailValue);
          formData.append("pwd", passwordValue);

          const response = await fetch(
            "https://mon8n.fly.dev/webhook/2dc5224f-8d7f-4581-a219-cc5a15f84589",
            {
              method: "POST",
              body: formData,
            },
          );

          const data = await response.json();

          if (
            data?.body["home_page"] === "/helpdesk/login" ||
            data?.body["home_page"] === "/app"
          ) {
            const responseCookie = data.headers["set-cookie"];
            const getSidToken = responseCookie[0].split(";");

            document.cookie = `${getSidToken}; expires= ${addDaysToDate(
              new Date(),
              7,
            )}; path=/; SameSite=Lax`;
            document.cookie = responseCookie[1];
            document.cookie = responseCookie[2];
            document.cookie = responseCookie[3];
            document.cookie = responseCookie[4];
            localStorage.setItem("email", emailValue);
            window.location.href = `/dashboard?email=${emailValue}`;
          } else {
            window.alert("Email not found");
          }
        } else {
          window.alert("Invalid Email");
        }
      } else {
        window.alert("Email or password not found");
      }
      // log value
    });
  }

  function addDaysToDate(currentDate, daysToAdd) {
    daysToAdd = daysToAdd || 0;
    const futureDate = new Date(currentDate);
    futureDate.setDate(futureDate.getDate() + daysToAdd);
    return futureDate;
  }
</script>
