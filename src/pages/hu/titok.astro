---
import { changeLanguage } from "i18next";
import Container from "@components/container.astro";
import Layout from "@layouts/Layout.astro";
import LetsTalk from "@components/LetsTalkhu.astro";
import Link from "@components/ui/link.astro";
changeLanguage("hu");
---

<Layout lang="hu" title="A titok, amit szoftver kiválasztásához tudni kell">
	<Container>
		<div class="px-5">
			<div class="flex justify-between items-center text-[#192734] dark:text-white h-[70vh]">
				<div class="flex flex-col h-full justify-center">
					<h1 class="text-[60px] leading-none font-semibold">Válassz jó szoftvert!</h1>
					<h2 class="text-xl text-[#192734] dark:text-white my-4">Ebben segítenek a független szolgáltatók. </h2>
				<div>
					<Link href="/hu/kapcsolat">
						Beszéljünk!
					</Link>
				</div>
				</div>
				<div>
					<img class="w-[40vw]" src="/mautic-marketing-automation-platform.jpg" alt="" />
				</div>
			</div>
			<div class="flex flex-col items-center">
				<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
					<h2 class="font-bold text-3xl mb-10">Miben más egy szoftver beszerzése?</h2>
					<p class="list-disc text-[17px] leading-7 space-y-5]">
					<ul>
			<li>Egy vállalati beszerzés több dolog miatt lehet nehéz. Például időigényes a megfelelő terméket és szállítót megtalálni, de az is előfőrodul, hogy túl drága a kiválasztott megoldás és nem fér bele a költésgkeretbe. Ha mindezzel megbirkóztunk, akkor a szoftverbeszerzés még további kihívásokat tartogathat:<br><br></li>

			<li>Azon túl, hogy szoftver esetén - más javakhoz hasonlóan - fontos, hogy kielégítse az igényeket, amivel kapcsolatban néhány nézőpontot a lenti bekezdésekben felvillantunk, de ezen túlmenően más dolgokat is érdemes mérlegelnünk: <br> <br></li>
			<li>Funkcionalitás, azaz a szoftver tudja, amire szükségünk van.  <br> <br></li>
			<li>Ergonómia, ne csak tudja amit szeretnénk, hanem mi magunk meg is tudjuk oldani szakértő nélkül.  <br> <br></li>
			<li>Szükség lehet bizonyos testreszabásra, amit szintn nem inden szoftver/szállító támogat.  <br> <br></li>
			<li>Ezzel elérkeztünk a támogatás kérdéséhez, hogy folyamatosan karban legyen tartva és lehetőleg kövesse a világ változásait, de a meglévő, használt funkcióink is maradjanak elérhetőek.  <br> <br></li>
			<li>Mindezt szeretnénk ha biztonságban tenné, hiszen sok üzleti/személyes adatot bízunk rá.  <br> <br></li>
			<li>Ma már hiába választunk egy integrált rendszert, ami a lehető legtöbb üzleti területet kezelését megoldja, az élet komplexitásából adódóan minden esetben szükség van külső integrációkra, legyen ez jogszabályi megfelelés, vagy kényelmi funkció. Vagy csupán azért, mert bizonyos területre az általános megoldás helyett egy speciális célszoftvert szeretnénk használni.  <br> <br></li>
			<li>Szoftver esetén egyértleműnek tűnik, hogy a jogi szempontokat is figyelembe kell vennünk, de jobban belegondolva ez bármilyen szolgáltatás/terémk beszerzésére igaz lehet, hogy az a különböző szabályok előírásainak megfeleljen, csupán ezeket alacsonyabb kockázatú helyzetekben hajlamosak vagyunk figyelmen kívül hagyni, ezt viszont szoftver esetében nem tehetjük meg.  <br> <br></li>
						</ul>
					</p>
				</section>

				<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
					<h2 class="font-bold text-3xl mb-10">Tökélestes szoftver nincs</h2>
					<p class="list-disc text-[17px] leading-7 space-y-5]">
						<ul>
							<li>Ahogy semmiből sem létezik tökéletes, mert ez egy végtelenül szubjetkív kategória, úgy szoftverből sem létezik. Minden felhasználás, vállalkozás más, így a problémák és folyamatok és fókuszpontok is, így a tökléletes szoftver sem létezik ebből a szempontból. <br> <br></li>
							<li>Azért sem létezik, mert világunk és ezzel igényeink is folyamatosan változnak, ahogy a szoftverek is, így még számunkra is változik, hogy mikor milyen lenne a tökéletes szoftver. <br> <br></li>
							<li>De, ha lenne is tökéletes szoftver, még annál is van jobb szoftver: <br>
							A tökéletes szoftvernél jobb a kész. - azaz az "azonnal" használható szoftver. <br> <br></li>
							<li>Talán még ilyen azonnal használható szoftver sincsen, legalábbis a komplexebb szoftverek közül. De a nyílt forráskódú szoftverek, amelyeket a sok közösségi igény alapján fejlesztenek már nagyon közvel van ehez és jó alapot nyújt hiszen svájci bicska szerűen könnyeédn alakítható. A másik megoldás pedig az lehet, ha ugyan integrált rendszert választunk, de egy-egy terület lefedésével folyamatosan haladunk és nem pedig komplex együtemű bevezetésen keresztül minden akarunk. <br> <br></li>
										</ul>
					</p>
				</section>

				<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
					<h2 class="font-bold text-3xl mb-10">Nyílt forráskódú szoftverek</h2>
					<p class="list-disc text-[17px] leading-7 space-y-5]">
						<ul>
							<li>Hogyan kerül ide a nyílt forrkód? <br><br></li>
							<li>Ez a téma a fentiekhez több szálon is kapcsolódik. Az egyik a tökéletes szoftver témaköréhez kapcsolódik azza, hogy a legtöbb esetben szükség lehet a szoftver módósítására. És ha nem nyílt forráskódú szoftverről beszélünk, akkor ezt - jellmezően nagyo magas díjon - csak az eredeti szoftvert kiadó szervezet tudja megtenni. Ez megnehezíti a folyamatos karbantartást, a naprakészen tartást, frissítést, új funkciók bevezetését vagy a támogatást nyújtő partner cseréjét. Amit Vendor Lock In-nek nevezünk.  <br><br></li>
							<li>Ezzel szemben a nyílt forráskúdú szoftver esetében - legegyszerűsítve - bárki, akinek a kód rendelkezésére áll, végezhet benne - a licensz által megengedett feltételek mellett, bár ez jellemzően áltlaában nem technikai, hanem publikálási vagy érétkesítésre vonatkozó feltétleek. - végezhet módosításokat.  <br><br></li>
							<li>A független partnerek jellemzően nyílt forráskódú szoftvereket támogatnak, hiszen azokkal tudnak könnyedén dolgozni. Azokat könnyű megismerni, hiszen kód szinten is hozzáférhető. Továbbá, ugyan ismerik a szoftver sajátosságait, de jól ismerik a programnyelveket amiken ezeket a szoftvereket írták és ezek már jelentős átrjárást biztosítanak bizonyos szofverek között. Például rendelkeznek az üzleti tudással vállalatirányítás terén, a beszerzéstől az értékesítésen a könyvelésen át, valamint a jelentős üzleti szoftverek pyhton és valamilyen SQL alapon működnek, akkor viszonylag könnyű navigálni akár új hasonló szoftvere és funkciók között is. <br><br></li>
							<li>Nyílt forráskódú szoftver esetén tehát megkapjuk a kulcsot a teljes testreszabáshoz és ezt bármely független partner támogatása mellett élvezjetjük. <br><br></li>
							<li>Fontos azonba, hogy a nyílt forráskódú szoftver még nem jelenti automatikusan azt, hogy a szoftver ingyenes is. Ez egy külön réteg, amit fontos szempont lehet a szoftver kiválasztásakor.<br><br></li>
							</ul>
				</p>
				</section>
				<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
					<h2 class="font-bold text-3xl mb-10">Bérlés, vásárlás vagy ingyenes szoftver</h2>
					<p class="list-disc text-[17px] leading-7 space-y-5]">
						<ul>
							<li>Ezt azzal kell kezdenünk, hogy mindenki az eszébe vésse: Nincs olyan, hogy felhő. Az valójában valaki másnak a számítógépe. <br><br></li>
							<li>Ebből következik, hogy az első bekezdésben említett szempontok közül ez az egyik kiemelkedő kockázat lehet. Ezzel nem azt mondjuk, hogy a felhő önmagában rossz, hiszen mi is sok "felhő" szolgáltatást ajánlunk, de nem mindegy, hogy az milyen. <br><br></li>
							<li>A tipikus felhő szolgáltatás, ahol csak használhatjuk az adott szoftvert a böngészőnkből. Itt meg kell említeni, hogy ezért jellemzően per hónap per felhasználó alapon kell fizetni, ami szolgáltatótól függően kevés felasználóval vonzó lehet, majd növekedés esetén túl drága. Itt sokszor a váltás is túl drága és a vendor lock in helyzetbe kerülhet a felhasználó.   <br><br></li>
							<li>Persze sokszor ezt a vállalkozók úgy kezelik, hogy addigra majd lesz pénz és nem gond, de valójában egy jól menő vállalkozásból a profitot nem szeretnénk drága szoftverekre kifizeteni, ha van más lehetőség.<br><br></li>
							<li>Magyarországról még kis számú felhasználó szám esetén is drágák lehetnek bizonyos termékek, főleg ha sok önálló szigetszerű termékekre van szükség. Ezért nem mindegy milyen felőhről beszélünk.<br><br></li>
							<li>Meglátásunk szerint a jó kombináció az olyan nyílt forrású szoftver, amely ingyenes, de felhőben futtatható. Legyen szó a szolgáltató, saját vagy harmadik fél által üzemeltett felhőről, ahol a biztonsági mentésekhez bármikor hozzáférhetünk, vagy azok egyenesen nálunk érhetőek el. <br><br></li>
							<li>Ennek a megközelítésnek a pénztárcánkra és a biztonságra gyakorlolt hatása is jelentős, hiszen ha bármi történik a szolgáltatóval a szoftvert tovább tudjuk használni, az adatink elérhetőek, a legrosszabb esetben csak költöztetnünk kell a rendszerünket.<br><br></li>
						</ul>
					</p>
					</section>

					<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
						<h2 class="font-bold text-3xl mb-10">Társult szolgáltatók</h2>
						<p class="list-disc text-[17px] leading-7 space-y-5]">
							<ul>
								<li>A fentebb felsoroltakra milyen hatással van az, hogy milyen szolgáltatót választunk?<br><br></li>
								<li>Mit jelent a társult és a független szállító?<br><br></li>
								<li>A társult szállítók alatt azokat a szolgáltatókat értjük, akik ugyan egyrészt magas színvonalú támogatást nyújtanak bizonyos szfotver termékekehez, legyen szó ERP rendszerről, weboldalról, vagy akár marketing szoftverről, az ő kompetenciájuk csak kés kizárólag az adott szoftverre terjed ki. Ez egyrészt azt jelenti, hogy minden áron ezt a terméket akarják értékesíteni az ügyfélnek, mégha nem is erre van szüksége. Másrészt ha nem is teljesen alkalmas a szoftver az adott feladat megoldására, akkor is ebben a szoftverben keresnek valamilyen, általában végül nem a legjobbnak bizonyosuló megoldást. <br><br></li>
								<li>Miért teszik ezt?<br><br></li>
								<li>Azon túl, hogy sokszor a svájci bicska jellegű szoftverek sokmindenre alkalmasak, továbbá mivel tényleg magas szakmai tudással bírnak, tényleg szinte bármit meg tudnak oldani, ez tűnik számukra a jó megoldásnak.<br><br></li>
								<li>De van egy másik tényező is, ami miatt csak az általuk támogatott egyetlen szoftverben gondolkodnak. Ez pedig sokszort az üzleti modellhez, a licenszeléshez, azaz végsősőron a pénzhez kapcsolódik. <br><br></li>
								<li>Igen, ez azt jelenti, hogy nem csak a bevezetésben, feljelsztésben van anyagi érdeke a szállítónak, ami egyértelmű, hanem ha ezekre nincs is szükség, akkor csupán a szoftver értékesítése is megéri számára a jutalékért cserében, még akár olyan áron is, hogy végül az ügyfél nem fogja használni a szolgáltatást, mert a szoftver és az üzlet komplexitásából adódóan könnyen lehet az ügyfél kompetenciájának hiányára hivatkozni.	 <br><br></li><li>Igen, ez azt jelenti, hogy nem csak a bevezetésben, feljelsztésben van anyagi érdeke a szállítónak, ami egyértelmű, hanem ha ezekre nincs is szükség, akkor csupán a szoftver értékesítése is megéri számára a jutalékért cserében, még akár olyan áron is, hogy végül az ügyfél nem fogja használni a szolgáltatást, mert a szoftver és az üzlet komplexitásából adódóan könnyen lehet az ügyfél kompetenciájának hiányára hivatkozni.	 <br><br></li>
								<li>Ez kevésbé jellemző azokra a szolgáltatókra, akik nem a jutlaékora építik üzleti modelljüket és/vagy hosszútávú ügyfélelégedettségben hisznek, de a szoftver így is behatárolja a mozgásterüket. <br><br></li>
								<li>Van még egy tényező ami szűkti a szolgáltató sé ezáltal a felhasználók lehetőségeiket, az az, hogy valójában nincs beleszólásuk a termék jövőjébe. Legyen szó funkciókról, vagy árazásról, ami akár nem tervezett árváltozáshoz is vezethet.<br><br></li>
											</ul>		
					</section>
					<section class="py-8 px-4 md:w-[45vw] text-[#192734] dark:text-white">
						<h2 class="font-bold text-3xl mb-10">Független szállítók</h2>
						<p class="list-disc text-[17px] leading-7 space-y-5]">
							<ul>
								<li>Egyrészt az összehasonlításból adódóan evidens, hogy a független szállítók ellentétes tuljadonságokkal rendlekeznek a társulatkhoz képest, de érdemes ezt kifejteni, hogy ezek valójában mikor és milyen előnyöket jelentenek. <br><br></li>
								<li>Természetesen egy független szállító sem érthet minden szoftverhez, de nagyobb rálátása van a piacra, ezért jellemzően tud olyan szoftvert, megoldást javasolni, amit ő maga nem támogat. <br><br></li>
								<li>De sokkal inkább jellemező a független tanácsadókra és szolgáltatókra, hogy úgy állítják össze a portfóliójukat és úgy építik fel a csapatokat, hogy a célcsoportuk legtöbb üzleti prolbémájára tudjanak akár több szoftverrel együtt megoldást nyújtani és akár ezek integrációját is megoldják.  <br><br></li>
								<li>Olyan helyzet is elfőrdulhat, hogy műszakilag több szoftver is megfelelő lenne egy partner számára, és akár mindegyik támogatásában van tapasztalata a független szállítónak és ezzel a tudással más szempont - például hosszútávú költségek alapján (Cost of Ownership), vagy Gap analysys, vagy akár ROI) - a saját üzleti érdekétől elvonatkoztatva tudja a legjobb támogatást nyújtani az ügyfélnek. <br><br></li>
								<li>Ebben a szakmában egyrészt folyamatos tanulásra van szükség, és ugyan ez igaz egyetlen szoftver támogatása esetére is, de az ületi igényeket könnyebb úgy magas szinten kielégíteni, hogy egyrészt nincs megkötve a kezünk, másrészt bármikor emelhetünk be újabb megfelelő technológiákat.<br><br></li>
								<li>Meg kell említenünk, hogy ugyan a legtöbb társult szolgáltatónak a szerződése ugyan nem köti ki a kizárólagosságot, de jellemzően mégsem nyújtanak más támogatást. <br><br></li>
								<li>A társult szolgáltatók számára a jutalékuk megszerzéséhez különböző kötelező képzéseket is előírhatnak és a nem hivatalos, független partnerek nem rendelkeznek ilyen tanusítványokkal, de ezeknél a valós eredmények, mint például a referenciák, sokkal többet érnek. Figyelembe véve - a tanulás jelentőségét meg nem kérdőjelezve -  ezek a képzések jelentős erőforrást vonhatnak el a valós problémák megoldásától és nem adnak támogatást a valós életben az ügyfél részére, továbbá több "alternatív" tanusítvány szerzésről is lehet hallani, ami megkérdőjelezheti ezek hitelességét, kezdve azzal, hogy bizonyos plecsni megszerzése csupán pénz kérdése, amit végül az ügyfél fizet, tehát a független partner költséghatékonyabb megoldást nyújthat.  <br><br></li>
											</ul>		
					</section>
			</div>
			<section>
				<LetsTalk />
			  </section>
		</div>
	</Container>
</Layout>
