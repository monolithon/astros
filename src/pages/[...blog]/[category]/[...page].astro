---
import i18next, { changeLanguage } from "i18next";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Posts from "@components/blog/posts.astro";
import Sectionhead from "@components/sectionhead.astro";
import Pagination from "@components/blog/pagination.astro";

changeLanguage("en");
export async function getStaticPaths({ paginate }) {changeLanguage('en')
    // get post collections
    var posts = await getCollection("blog", ({ data }) => {
        return !data.draft && data.publishDate < new Date();
    });
    const localizedPosts = posts.filter((page) => {
        const [lang, ...slug] = page.slug.split("/");
        return lang === i18next.language;
    });
    // Sort content entries by publication date
    localizedPosts.sort(function (a, b) {
        return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
    });
    const categories = new Set();
    posts.map((post) => {
         post.data.category.forEach(item=>{
          typeof item === "string" &&
            categories.add(item.toLowerCase());
         })
    });
    return Array.from(categories).map((category: string) => paginate(localizedPosts.filter((post) =>post.data.category.map(item=>typeof item  === "string" && category === item.toLowerCase())),
        {
        params: { category: category, blog: "category" || undefined },
        pageSize: 5,
        props: { category },
        }
  ));
}
const { page, category } = Astro.props;
---

<Layout title="Blog" lang="en">
  <Container>
    <Sectionhead>
      <Fragment slot="title">{category}</Fragment>
      <Fragment slot="desc">
        We write about building startups and thoughts going on our mind.
      </Fragment>
    </Sectionhead>
    <Posts posts={page.data} />
    <Pagination class="mt-20" prevUrl={page.url.prev} nextUrl={page.url.next} />
  </Container>
</Layout>