---
import { changeLanguage } from "i18next";
import Container from "@components/container.astro";
import Layout from "@layouts/Layout.astro";
import NewsLetter from "@components/EmailForm.astro";
import Link from "@components/ui/link.astro";
changeLanguage("en");
---
<Layout lang="en" title="No code, low code, open-source, Python and JavaScript-based web framework">
    <Container>
    <div class="px-5 pt-10">
      <div class="flex justify-between items-center text-[#192734] dark:text-white h-auto md:flex-row flex-col pb-12 md:pb-1">
        <div class="flex flex-col h-full justify-center basis-3/5">
                    <h1 class="text-4xl md:text-5xl leading-none font-semibold">Frappe Framework</h1>
                    <h2 class="text-xl text-[#192734] dark:text-white my-4">No code, low code framework for rapid development.</h2>
                    <div>
                        <Link href="/contact">
                            Let's Talk!
                        </Link>
                    </div>
                </div>
            <div class="mt-10 md:mt-0 basis-1/2 overflow-hidden">
                    <img class="w-full" src="/images/frappe-framework.jpg" alt="" />
                </div>
            </div>
            <div class="flex flex-col items-center">
                <section class="py-8 px-4 md:w-2/3 text-[#192734] dark:text-white">
                    <h2 class="font-bold text-3xl mb-10">No code and low code solutions</h2>
                    <p class="list-disc text-lg leading-7 space-y-5">
                        No code and low code development methods use tools and platforms that allow the creation of applications and software without the need for deep programming knowledge. <br><br>
                        No code: On one end, where developers require almost no coding knowledge. In this case, the tools and platforms are so simple that practically anyone can easily create applications, processes, or websites. In the case of Frappe, this means that we can define new fields and workflows on the interface without writing custom code. <br><br>
                        Low code: Here, there is some programming control, but developers only need minimal coding. Low code platforms expedite the development process and allow customization of applications without having to create them from scratch. In the case of the Frappe Framework, the following paragraph illustrates the pre-built components that can be leveraged with this mindset. <br><br>
                        The aim of both methods is to simplify software development, allowing business professionals and less experienced developers to efficiently and quickly create applications and automate processes.
                    </p>
                </section>
                <section class="py-8 px-4 md:w-2/3 text-[#192734] dark:text-white">
                    <h2 class="font-bold text-3xl mb-10">Elements of Frappe Framework</h2>
                    <p class="list-disc text-lg leading-7 space-y-5">
                        Frappe comes with the following core modules required for building any serious business application: <br><br>
                        Using metadata: In Frappe, everything is a DocType. DocTypes can be easily defined without code and can be used everywhere. <br><br>
                        Out-of-the-box admin and user interface: Frappe comes with rich features, including built-in forms, lists, search, and navigation. <br><br>
                        Roles and permissions: You can define user roles and permissions that are automatically applied to all interactions. <br><br>
                        Extensible: With a modular architecture, you can create your own applications that can be extended by other applications. <br><br>
                        REST API + Webhooks: Frappe is integration-friendly and offers REST API and Webhooks for all models based on authentication. <br><br>
                        Job Scheduler: You can configure background workers and run periodic tasks. <br><br>
                        Socket.io: Frappe comes with first-class Socket.io support based on NodeJS and uses Redis pub-sub. <br><br>
                        Email setup: Easily send, receive, view, and manage emails using SMTP and IMAP-based email accounts. <br><br>
                    </p>
                </section>
                <section class="py-8 px-4 md:w-2/3 text-[#192734] dark:text-white">
                    <h2 class="font-bold text-3xl mb-10">ERPnext Framework</h2>
                    <p class="list-disc text-lg leading-7 space-y-5">
                        It clearly demonstrates the quality of the Frappe Framework that it is the only known No code/Low code framework on which a complex, complete (open-source and free) ERP system has been built. <br><br>
                        ERPNext is built on the Frappe Framework, making ERPNext easily extendable and customizable. <br><br>
                        And if all of this weren't enough, Frappe evolves so rapidly that it keeps up with global and technological changes, making application updates a breeze. In version 15, the interface was completely redesigned, improving speed and customization with the introduction and integration of the new FrappeUI.
                    </p>
                </section>
                <section id="contact-form-2">
                    <NewsLetter />
                </section>
            </div>
        </div>
    </Container>
</Layout>
