<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Monolithon - ERPNext, Frappe, Odoo and more</title><description>ERPNext, Odoo, eCommerce, Shopify, Static Site Generator, astro.build, Queue Management System, Frappe, n8n, Mautic</description><link>https://www.monolithon.com/</link><language>en-us</language><item><title>The Monolithon Approach to ERPNext Hungarian Invoicing</title><link>https://www.monolithon.com/blog/erpnext-hungarian-compliance-fundamentals/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-hungarian-compliance-fundamentals/</guid><description>The Monolithon Approach to ERPNext Hungarian Invoicing</description><pubDate>Wed, 27 Dec 2023 13:20:00 GMT</pubDate><content:encoded>
Why hasn&apos;t the ERPNext Hungarian invoicing solution been completed yet?

Many laypeople often say that invoicing is straightforward because there is a lot of data available, and ERPNext is used in many countries along with other international solutions for invoicing. In such cases, the simplest way is to show the Hungarian VAT law, which regulates most of the invoicing-related questions. Yes, not only is the 27% VAT a world champion, and although we haven&apos;t compared, it is almost certain that our VAT law is the longest, which is not necessarily advantageous. Invoices have mandatory content elements, such as dates. However, the specific dates to be included in a date-type field in invoicing are determined by the kilometer-long VAT law. This can largely be said for other content elements of the invoice as well. And then we haven&apos;t even mentioned the mazes of exceptions and exemptions with their special conditions.

&lt;img src=&quot;/images/ERPNext-hungarian-compliance.png&quot;&gt;
We can conclude that Hungarian invoicing, in light of the above, is more complex than being quickly implementable into an international system. And here is another crucial point: we are talking about an international system concerning ERPNext Hungarian invoicing. The system provides solutions for general matters, but for most - country-specific - issues, it does not. We need to complement this by saying that we want a solution - since ERPNext can handle multiple organizations/companies with a so-called multicompany setup - that allows the combined operation of companies in multiple different countries.

We could say that the Hungarian invoicing solution isn&apos;t ready because it&apos;s too complex, not a priority, etc. While all these reasons are true, the reality is that we&apos;ve previously developed an invoicing solution for ERPNext version 13 towards the szamlazz.hu system using the make (formerly integromat) solution. We also have experience with Odoo invoicing. However, based on all these experiences, we wanted to provide a more comprehensive solution for our clients, requiring more planning and decision-making.

It is crucial for us to maintain the fundamental accounting functionality of ERPNext, and we want to enhance and supplement it to comply with Hungarian regulations in the future. Thus, we are not just talking about invoicing. Besides the mentioned synchronization solution for invoicing integration, we have various possibilities for native NAV API-based solutions and intermediaries, such as using szamlazz.hu and billingo.hu. We can create our invoicing module with our own doctype and workflow or complement the existing invoicing system with the necessary Hungarian invoicing functionalities. This involves not only adding new fields and data exchange but also overriding basic functions. All of this with company-specific administration and long-term sustainability, updateability. Previously, there was no or limited ERPNext implementation suitable for other countries, so the basic ERPNext software was not always suitable for Hungarian invoicing implementation. It would have required replacing many nonexistent functions or completely rewriting existing logic in a customizable way, so it wouldn&apos;t have been just about localization. Some of this has persisted, such as advances, cancellations, and modifying invoices. However, the new ERPNext versions have not only reduced/simplified our tasks in various invoicing-related aspects but also provided guidance on certain questions, especially those related to solutions in other countries and the necessary foundational modifications, as discussed below.

Approach to Developing Hungarian ERPNext Invoicing

Considering various factors, such as those mentioned above, we initially planned a direct invoicing submission through the NAV API. We also explored the option of Chrome headless Online Invoice submission, but ultimately, we opted for integration.

What are the advantages of this approach? It ensures that ERPNext is not the invoicing program itself. Although it&apos;s no longer mandatory to report the invoicing program to the National Tax and Customs Administration (NAV) nowadays, the need for mandatory data export functionality still exists. Our solution simplifies our lives and the lives of our clients by maintaining the status of a business management system with invoicing capabilities. Even though the use of the NAV online invoice API is unavoidable if we want to obtain Hungarian name and address data based on the tax number for free, and load supplier numbers into the system, we don&apos;t intend to implement this as the first step. Similarly, we don&apos;t plan to implement the download of taxpayer and taxpayer status from VIES in the initial phase (although proof of concept has already been completed for both). However, this implies that our solution needs to be built in a way that is compatible with these aspects. This approach allows for potential future direct NAV online invoice submission or the replacement of the chosen invoicing API with another partner, making the task even more complex. APIs provide some guidance, especially when the extensive VAT law is not formulated precisely enough. In such cases, the data received by the API can be treated as a suggestion, subject to our evaluation.

Although we&apos;ve mentioned it before, it&apos;s important to emphasize at this point that we need to understand the basic functionality of ERPNext. This is crucial because the basic ERPNext system is already complex, with various functions related to invoicing, which, to some extent, can be used or must be considered during the implementation of Hungarian invoicing. For instance, we want seamless cooperation of all functions with the Hungarian localization. Although it may seem trivial at first, features like automatic invoice generation, subscription management, and their compatibility with continuous performance Hungarian invoices are not straightforward in reality. Adding to the complexity is the fact that some countries have already released ERPNext invoicing localizations, fortunately built on the basic ERPNext, and not starting from scratch, only solving the implementation on the Frappe Framework. Since we want to remain compatible with these implementations in a multi-company setup, it becomes a challenging task. Even though modifications in these implementations and the core (basic) system needed for them can assist in shaping Hungarian invoicing, it remains a non-trivial task.

For example, the globally spreading e-invoicing (mandatory in all EU member states from 2028) has implementations in Italy, and there are solutions in Gulf countries, India, and the English Make Tax Digital. Hence, we try to take into account both Hungarian and foreign APIs and existing implementations, which is not an easy task.

How do others do it?

We would like to introduce another perspective: industry best practices. Since there are Hungarian solutions for other software as well, we have collaborated with many professionals who have been decision-makers in similar projects. Based on their implementations, we might think that it is easier to develop Hungarian invoicing in ERPNext. This is partly true because we will probably make new mistakes that those who have worked on similar projects before have not made. However, it is important to highlight a fundamental question that we have not observed with any software regarding Hungarian invoicing. We touched upon this briefly earlier: the implementation of invoicing did not happen from an accounting perspective; in most cases, only invoicing questions were taken into account.

We know of two specific examples where they paid significant attention to the usage of dates (such as invoice date, fulfillment date, etc.). However, they reused the existing date functions of the base system in such a way that they cannot correctly record every economic event, requiring various tricks. We were also inclined to this approach, for instance, making the VAT performance date the base ERPNext invoice date. However, in our opinion, this is a dead-end, as it does not provide as much benefit—meaning, we won&apos;t save much effort on other developments—as the headache it causes. Staying with the example, we prefer to take on the approach of using additional date fields, even if their number doesn&apos;t matter much when automatically populated. This way, every economic event becomes recordable in the system.

The essence is that we not only enable the recording of mandatory invoice data but also provide the data necessary for its accounting. This becomes interesting, for example, when we want to account for invoices not only from our own system. More specifically, if we use the base date field for accounting or VAT dates, many basic ERPNext functions would still be available by default. So, what&apos;s the problem? The issue is that, for example, basic ERPNext reports, such as the VAT report, would still not comply with Hungarian rules, and they would need further refinement. Here came the realization that if we have to create custom reports for Hungarian invoicing, it&apos;s simpler to build it from scratch, as mentioned earlier, ensuring that all necessary data is available—meaning, handling multiple dates, for instance.

Then, what do we use the existing dates for? Everything they are fundamentally meant for. This reduces the number of additional date fields to be introduced, for example. Most misunderstandings arose here about what each field is actually for. The base invoice date field is the date when we want to include the invoice in our own accounting. This is often not a matter of choice, but for example, if we receive an invoice for a closed tax year later, we can only book it for the current/following year, despite the need for the original VAT return date and leaving the issue of deferrals aside. Also, we haven&apos;t mentioned continuous performance invoices, with start and end dates, which can be considered as a period but can also function as a financial performance date.

&lt;img src=&quot;/images/ERPNext-hungarian-compliance-02.png&quot;&gt;

Due to the thoroughly dissected complexity, we try to take these discussed topics into account. However, precisely because of these complexities, we are working on delivering smaller, more manageable units. Regarding invoicing, the goal is to enable the issuance of customer invoices as soon as possible, and only then expand the scope. Although it would be good to include as many features as possible, such as using the Nomenclature of Goods and Services codes, as the Indian solution does, we do not want to further delay the release with that.

What did we forget?
What we forgot is that we want a customer invoicing solution that can be easily applied to recording supplier invoices as well. This means that the workflow, fields, and operations on both sides can be identical, simplifying the everyday lives of users, which is also not trivial. And then there&apos;s the VAT. Yes, from 2024, it&apos;s the eVAT, expanding the approximately 30 tax codes known so far to 236, and we haven&apos;t even talked about other taxes and declarations related to invoicing, such as packaging product fees or the National Tax and Customs Administration (NTCA) in the case of accommodation and catering. That&apos;s why we focus on the smallest unit, which is issuing customer invoices. However, we can also mention the cash bases accounting (e.g., sole proprietorship) and VAT cases, which we currently do not plan to implement because we see a detour for them, for example, with the mentioned custom reports, but we try to take them into account. Furthermore, it is an interesting question how to handle manual and automatic submissions, errors, resubmissions, cancellations, amends, and any corrections.

Another interesting question was the organization of the app. Earlier, we considered several smaller apps, so that each part could be used separately. However, since this is almost all Hungarian-specific, and here, without each element, it is hardly usable, we prefer to think in terms of a comprehensive solution. For example, there is a need for MNB exchange rates in most cases, which has also been completed at the PoC level.

Why was this post created?
Beyond welcoming feedback, questions, ideas, and suggestions, we follow these as guiding principles when making decisions, and it also helps summarize thoughts from which we can create goals and tasks for their implementation.

We don&apos;t know the details of the publication yet. The idea of a free open-source edition has come up several times, which is still a possibility, despite one of the solutions we created - &lt;a href=&quot;https://www.monolithon.com/gocardless&quot;&gt;bank account synchronization with GoCardless integration&lt;/a&gt; - being offered as a monthly subscription SaaS, i.e., as a cloud service. We made it available in this way because another ERPNext partner developed a similar paid solution, and we didn&apos;t want to interfere with them by releasing a free competing solution. So, we consider this solution not as a source of income but rather as a feasibility study, which is still uncertain for Hungarian invoicing.

A copy of this post has been published on the forum to facilitate discussion:

&lt;a href=&quot;https://discuss.frappe.io/t/hungarian-invoice-magyar-szamlazas/64970/15&quot;&gt;https://discuss.frappe.io/t/hungarian-invoice-magyar-szamlazas/64970/15&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>ERPNext GoCardless Module Now Available</title><link>https://www.monolithon.com/blog/erpnext-gocardless/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-gocardless/</guid><description>ERPNext GoCardless app arrived!</description><pubDate>Wed, 27 Dec 2023 08:09:00 GMT</pubDate><content:encoded>
ERPNext Bank Synchronization with GoCardless Integration not just for Hungarian Banks

From the beginning, it has been possible to import bank transactions into the ERPNext ERP/CRM system to ensure the reliability of our accounting by reconciling these bank transactions with the payment entries recorded in our system.

As bank transactions became available through various aggregator platforms, such as Plaid, ERPNext quickly implemented this to allow ERPNext users to synchronize bank data from available banks through the Plaid system. This still works today, but as Hungarian users, we had to acknowledge that we cannot wait for Hungarian bank data to be available in the Plaid system, as it is an American company where even Western European banks are considered special.

While more Hungarian businesses are switching to alternative banks such as Revolut or Wise, and although these are accessible through the Plaid system with some tricks, we had to wait for a convenient solution until an aggregator platform made the data available, and a necessary ERPNext module was developed.

This is where we are now. The work started with selecting the aggregator platform. We looked at many options. One of the largest and preferred by larger organizations is &lt;a href=&quot;https://aggreg8.io/&quot;&gt;https://aggreg8.io/&lt;/a&gt;. We could have chosen the solution from &lt;a href=&quot;https://docs.openbanking.klarna.com/&quot;&gt;https://docs.openbanking.klarna.com/&lt;/a&gt;, but we opted for the service that was then known as Nordigen, which has since been acquired and rebranded by GoCardless. We don&apos;t regret it because the service was good even before, and it&apos;s now in very capable hands at GoCardless.

To use our created GoCardless solution, you need a GoCardless bank account data account, and the free one is sufficient as it allows almost unlimited queries: &lt;a href=&quot;https://bankaccountdata.gocardless.com/&quot;&gt;https://bankaccountdata.gocardless.com/&lt;/a&gt;

Afterward, you only need to generate a Secret ID and Secret key pair on the GoCardless interface, which you then provide under the ERPNext Gocardless Settings in your own ERPNext instance. The last step is to add a new GoCardless Bank, where you can choose from the list of banks available for the selected country.

Of course, you can connect this to your ERPNext bank account and manually or automatically synchronize bank transactions.
For further details and ordering, visit the dedicated page: &lt;a href=&quot;https://www.monolithon.com/gocardless&quot;&gt;https://www.monolithon.com/gocardless&lt;/a&gt;
</content:encoded></item><item><title>Odoo 17.0 release</title><link>https://www.monolithon.com/blog/odoo-17-release/</link><guid isPermaLink="true">https://www.monolithon.com/blog/odoo-17-release/</guid><description>The latest version of Odoo, Odoo 17, has been released. Lots of novelties, huge opportunities, and important decisions.</description><pubDate>Sat, 11 Nov 2023 08:09:00 GMT</pubDate><content:encoded>
The usual annual Odoo Experience conference this year, as well, introduced the upcoming, latest version of Odoo by Odoo S.A., which is Odoo 17.

&lt;img src=&quot;/images/odoo-17.jpg&quot;&gt;

Some keen observers might have already noticed, or those who have started a free trial version on the Odoo Online platform, that the overall appearance has changed. Not only the colors but also the icons make navigating tasks within Odoo a bit more challenging. Beauty is subjective, so while some might not like it, others might be enthusiastic about the new design. One thing for sure is that it&apos;s fresher, perhaps aiming towards a younger audience, which might be a bold move for an ERP software, possibly aligning with the oft-mentioned generational shift in company leadership and the utilization of Odoo.

What innovations have arrived in Odoo 17? The most comprehensive view of the novelties can be found on the &lt;a href=&quot;https://www.odoo.com/odoo-17-release-notes&quot;&gt;Release Notes&lt;/a&gt; page, and I&apos;ve been cherry-picking from that along with testing and other sources.

Speaking of other sources and appearance, the Odoo forum has been updated as well. Both the app and the official Odoo forum are now running on the latest version, sporting an entirely new look. It used to resemble the Discourse solution and has been further refined. As usual, they generally follow industry best practices and successful software, drawing inspiration from them to build their own similar Odoo app.

Sticking with the &apos;look,&apos; let&apos;s continue with the website and the online store. As seen in the summary video below, Odoo is continuously developing this aspect. Despite Odoo 17 reaching a fairly good level in this area, in the heightened battle of online sales (unlike other business areas/apps where this strategy works very well), unfortunately, it likely won&apos;t be sufficient.

But who cares about appearance and icons when we can now use the search function even faster, instantly accessing what we need? This elevates navigation to a new level, which might require learning/adaptation, but surely it will be quick and enhance our efficiency.

The subscription management has been revamped again, but the good news is that it has not just been revamped but also gained new features, simplifying subscription management via the online store.

The quoting process has also been simplified by selecting products for the quote, but this seems more of a showcase since there are numerous details besides the items that we can set in the traditional interface. The creation of quotes with additional content and in a unique design in PDF format has been further refined, something that, as it was before, the client can accept and pay the advance online. In reality—except for a few business models/industries—we believe that these personalized quotes, despite their design, are increasingly being sidelined in online sales. Customers prefer not to play ping-pong with details found in offers but rather buy not only physical products but also (potentially complex) services online.

As we&apos;ve mentioned several times, we still swear by the integrated system, although there might be a need for other software, which might be necessary or advisable to integrate. Integration options have been introduced in Odoo Studio (only part of the Enterprise version) thanks to webhooks. This could be very interesting if these are also available in the Odoo Online version, where other APIs are likely hidden, as it could potentially allow integration without installing apps. However, we haven&apos;t had time to try this out yet. As part of integrations, WhatsApp support has been introduced, which could be important in certain countries, but since this is currently a free messaging service owned by Facebook, we would not encourage its use as the rules can change at any time.

My feelings about the new Odoo release are mixed so far. However, the new POS and self-service system are undoubtedly a big leap, even if its Hungarian translation/localization may be pending. This is especially a significant leap because the competition is lagging not only in the self-service field but also in the &apos;traditional&apos; POS aspect. The POS has been built around the restaurant system, just like this, so it&apos;s no surprise that it also received an important missing feature: the management of kitchen and customer monitors. And they complemented this with the connection of the previously existing appointment scheduling module and the restaurant module. Also, don&apos;t forget that one can now order from their own device in a restaurant using Odoo 17. This could be a real selling point, of course, considering the price as well.

Project management has been further refined, which actually saw a lot of development in the previous version already. These simplifications have made complex tasks more manageable with automation.

Within the manufacturing app, the screens and functions used on the shop floor have undergone significant changes, and while they were not bad before, they now offer an even simpler, more professional solution.

In addition to these, numerous minor modifications have been made in various apps, and new apps have been introduced, such as booking meeting rooms or managing visitors with access control.

It&apos;s important to note that all of the above apply to the Enterprise version, usable for a license fee. So, the free Community versions have undergone far fewer developments, as has been the trend recently.

Previously, we recommended the Community version to our clients, but since the revised (reduced) prices with the release of Odoo 16, we now recommend the Odoo Enterprise version to everyone for whom Odoo is the right software.

Unfortunately, without the Enterprise version, Odoo Community is becoming increasingly less usable. Until now, it mainly lacked convenience features, but now they&apos;re beginning to extract essential functions from the Community version. Just to name a few, without the full functionalities:

&lt;a href=&quot;https://twitter.com/kiketobella/status/1722718149940760671&quot;&gt;https://twitter.com/kiketobella/status/1722718149940760671&lt;/a&gt;

&lt;a href=&quot;https://twitter.com/niyasraphy/status/1714155461857964431&quot;&gt;https://twitter.com/niyasraphy/status/1714155461857964431&lt;/a&gt;

So, now more firmly than ever, we believe that in the case of Odoo, there is no choice; only Enterprise is usable nowadays, and the Community version is increasingly becoming more of a display to allow Odoo to be called open source, open-source software.

However, if Odoo Enterprise is still too expensive even with the reduced license fees, and based on the above, Community is not suitable, it might be worth examining other free, open-source ERP software, such as &lt;a href=&quot;https://www.monolithon.com/erpnext&quot;&gt;ERPNext.&lt;/a&gt;
</content:encoded></item><item><title>ERPNext 15.0 release</title><link>https://www.monolithon.com/blog/erpnext-15-release/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-15-release/</guid><description>The release of ERPNext 15 was indeed preceded by this year&apos;s Frappeverse, the ERPNext conference, but largely, it was also about the new version.</description><pubDate>Sat, 11 Nov 2023 07:09:00 GMT</pubDate><content:encoded>
The release of ERPNext 15 was indeed preceded by this year&apos;s Frappeverse, the ERPNext conference, but largely, it was also about the new version. Therefore, there won&apos;t be a separate report on this, unlike in previous years.
&lt;img src=&quot;/images/ERPNext-15-release.jpg&quot;&gt;

Now, however, I can not only report on the release of ERPNext 15 and the updates but am delighted to announce that from today, the ERPNext 15 version is available on the Frappe Cloud, making it easy for anyone to try out.

One striking change visible in the above ERPNext 15 screenshot is the design alteration. This was already known as those following the Twitter/GitHub ERPNext/Frappe pages could witness the concerted efforts on the &lt;a href=&quot;https://frappeui.com/&quot;&gt;Espresso Design System&lt;/a&gt; components. The responsive design works swiftly, even on mobile devices.
The speed and acceleration are not solely due to this but owe much to over 800+ commits that improved stability and speed. A big thanks to Ankush Menat for this!
For a comprehensive overview, especially from the release announcement post, I am picking snippets from here: &lt;a href=&quot;https://discuss.frappe.io/t/frappe-and-erpnext-v15-release/111702&quot;&gt;https://discuss.frappe.io/t/frappe-and-erpnext-v15-release/111702&lt;/a&gt;.
For those interested in the complete changelog, I recommend checking out the GitHub ERPNext and Frappe 15.0 release summaries:

&lt;a href=&quot;https://github.com/frappe/frappe/releases/tag/v15.0.0&quot;&gt;https://github.com/frappe/frappe/releases/tag/v15.0.0&lt;/a&gt;
&lt;a href=&quot;https://github.com/frappe/erpnext/releases/tag/v15.0.0&quot;&gt;https://github.com/frappe/erpnext/releases/tag/v15.0.0&lt;/a&gt;

What else should be highlighted regarding the new ERPNext 15 and Frappe versions?

1. Much of the focus is on speed and scalability, thus, the closure of ledger accounts is worth mentioning first. Although similar functionality existed before, primarily used annually, it will now simplify future operations.
1. We&apos;ve received a new preview of the accounting entries that will be created upon submitting a particular transaction. This might be familiar from Odoo, as they&apos;ve been displaying this for a while now.
1. There&apos;s now the option to reserve products/inventory during the order process.
1. Multi-level Bill of Materials management is simpler with the new editor.
1. The handling of custom serial numbers, previously cumbersome, has been standardized and streamlined.
1. The printing image editor and workflow designer, which I previously wrote about, have been integrated.

From a developer&apos;s perspective, it&apos;s interesting that they removed many outdated packages and updated several things; for instance, vue3 is now supported. From now on, submittable doctypes can be sent as background operations. Some ERPNext modules continue as separate apps (like TaxJar, Lending, and localizations).

Not only did they continue the app separation that began with the 14th version, especially in the realm of e-commerce, but new Frappe solutions were also developed, inspired by FrappeDesk - helpdesk.

While CRM still exists within ERPNext, alongside many other apps, they announced Frappe CRM, which integrates VOIP phone calls and call recording.

&lt;img src=&quot;/images/Frappe-CRM.png&quot;&gt;

And there are many more new features, which I&apos;ll report on in more detail later.
</content:encoded></item><item><title>Switch to astro.build SSG (Static Site Generator)</title><link>https://www.monolithon.com/blog/switch-to-astro-build-static-site-generator/</link><guid isPermaLink="true">https://www.monolithon.com/blog/switch-to-astro-build-static-site-generator/</guid><description>A monolithon.com still runs on the ERPNext system, but we have separated the public website and now use astro.build for it.</description><pubDate>Sat, 11 Nov 2023 06:09:00 GMT</pubDate><content:encoded>
The blog hasn&apos;t ceased to exist, but instead of publishing it in the usual manner, I decided to first announce the transformation of the monolithon.com website.

What is this transformation?

We considered several aspects, such as: easy launch/migration, developer-friendly functionality, speed, customization, available features. Eventually, we concluded that the ERPNext-powered monolithon.com&apos;s ERPNext and Odoo blog should be detached from our own ERPNext system. While it performed well and greatly facilitated our work, allowing us to achieve much without coding, it wasn&apos;t the responsibility of an enterprise management system - which we regard as the &quot;single source of truth&quot; - to function as a public website.

It could be used as a content management system (CMS), but the chosen &lt;a href=&quot;https://www.monolithon.com/static-site-generator&quot;&gt;astro.build&lt;/a&gt; solution for content management in Git is very convenient, or even the DecapCMS solution can be used from a browser, ensuring if we&apos;re separating, it&apos;s full independence, and the content doesn&apos;t come through an API, as in the case of a Headless CMS; instead, we&apos;ve implemented a completely static page technology.

Why?

Because this guarantees the fastest page experience. This is important for visitors and for Google and other systems as well. After all, no one likes to wait. From a security standpoint, it&apos;s reassuring to keep our business data and public website separate. We still believe in using integrated systems like ERPNext or Odoo, but we recognize that in every case, there&apos;s a need for another software alongside them. So the question is where to draw the line about what to keep within them and what to use another software for.

In order to keep our business data &quot;clean&quot; while having appropriate data supporting sales, this separation was a good decision: the marketing and sales activities related to the website were addressed by integrating the Mautic system into astro.build.

This enabled us to collect and analyze as much data as possible - according to consent or legal basis - to provide even better service and support our automated marketing activities. Data then only enters the next phase of sales in ERPNext, which we can do directly between ERPNext and Mautic or using n8n.

Astro.build lived up to the attached hopes

The development was fast, and the results are great, something visitors can feel during quick browsing. We managed to further improve the Google rankings for the first &lt;a href=&quot;https://www.monolithon.com/blog&quot;&gt;Hungarian ERPNext blog&lt;/a&gt;, transferring the page structure and link structure in several steps, making only minor modifications and supporting this with an appropriate sitemap. Our other goal was also achieved, as our English content now reaches a wider audience.

I must mention that astro.build is continuously and rapidly evolving, so in the second step, we updated our already finished astro.build page to the latest version, which also happened smoothly and quickly.

The translation of content into English and the creation of new menu and content structures took priority, but as I mentioned in the introduction, from now on, blog posts and news from the world of ERPNext, Odoo, and other software are back.
</content:encoded></item><item><title>Odoo and ERPNext together with Frappe</title><link>https://www.monolithon.com/blog/inventory-and-product-value-correction-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/inventory-and-product-value-correction-in-erpnext/</guid><description>The Odoo print view editor is not nearly as user-friendly as what Frappe offers for ERPNext, especially the revamped version showcased in the previous post.</description><pubDate>Mon, 17 Jul 2023 06:09:00 GMT</pubDate><content:encoded>
The Odoo print view editor is not nearly as user-friendly as what Frappe offers for ERPNext, especially the revamped version showcased in the previous post. However, we don&apos;t intend to foster competition, and it&apos;s not an either-or situation. As we have mentioned on the blog several times, Monolithon uses and supports various software, including Odoo and n8n, alongside ERPNext and Frappe. We believe in finding the right software for the right task, as there is no one-size-fits-all solution.

Hence, this post is more of a report on a humorous PoC (Proof of Concept) about feasibility, created by a colleague who works with Odoo and ERPNext, specifically for designing the aforementioned print image.

The essence of the solution is that in Odoo (in the free Community edition), there is no straightforward way to edit or create new print images. (The paid Odoo Enterprise version offers a solution, but it differs from the straightforward functionality of Frappe.)

To address this situation, the &quot;solution&quot; developed here simply involves using an app to automatically transfer the data to be displayed in the print image from Odoo to Frappe, with just a one-time &quot;linking&quot; of the two systems. Then, in Frappe, the print image created with the mentioned designer solution can be assembled and set up, enabling the automatic generation of the super print image or PDF produced by Frappe when printing from Odoo. (So, there&apos;s no need to leave Odoo.)

The practical benefit of this development is doubtful, but we find it interesting and amusing, considering its simplicity and efficiency. As a team supporting Odoo, we have dealt with customizing print images and documents before, and just as we did in the past, we will choose a different path in the future as well. However, it&apos;s good to know that there is an alternative to Odoo, not only for print images but also for the entire business management.

For further details about the Odoo module and Frappe&apos;s solution, visit: https://ecosoft.frappe.cloud/blog/general/odoo-frappe-print-form
</content:encoded></item><item><title>New Print Designing App from Frappe to ERPNext</title><link>https://www.monolithon.com/blog/new-print-designing-app-from-frappe-to-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/new-print-designing-app-from-frappe-to-erpnext/</guid><description>Compared to other systems, creating printable or PDF documents with ERPNext has always been easier, but now it&apos;s really child&apos;s play.</description><pubDate>Mon, 03 Jul 2023 06:09:00 GMT</pubDate><content:encoded>
In the Hungarian ERPNext knowledge base and manual, we provided some tips for creating printable or PDF documents, and it was clear that creating new documents or converting existing ones was quick and straightforward. Now, Frappe has taken it to a higher level. The previously mentioned tips and tricks are no longer necessary.

The Print Designer is a new Frappe application that allows users to customize and design beautiful print formats with intuitive drag-and-drop functionality. The application provides a user-friendly interface for creating professional-quality print layouts with ease. The possibilities are endless; you can design the print view of any ERPNext document, from delivery notes to purchase orders, and even up to the ERPNext invoice PDF. The latter won&apos;t become NAV-compatible due to this, but it can be used with the ERPNext Hungarian invoicing solution developed by Monolithon to create custom invoice templates.

You can access the app from the following repository:

https://github.com/frappe/print_designer
</content:encoded></item><item><title>Frappe Insights from the ERPNext Team</title><link>https://www.monolithon.com/blog/frappe-insights-from-the-erpnext-team/</link><guid isPermaLink="true">https://www.monolithon.com/blog/frappe-insights-from-the-erpnext-team/</guid><description>In a previous blog post about ERPNext, BI, and Business Intelligence+Metabase, I intentionally didn&apos;t mention that the Frappe team also has a similar solution, which is why I planned this separate entry.</description><pubDate>Tue, 09 May 2023 06:09:00 GMT</pubDate><content:encoded>
## What is Frappe Insights?

In the Frappe Insights GitHub repository and the Frappe Marketplace, you can find the following definition:

&quot;Free and Open Source Data Analytics Tool for your Frappe Apps&quot; - which means it is a free and open-source data analytics tool for Frappe applications.

Alright, but what does that exactly mean? Those familiar with ERPNext have likely encountered the Frappe Framework, which I mentioned in a few blog posts before. This is a flexible framework on which various applications can be built. ERPNext is one such application. Essentially, ERPNext is an app that needs to be installed on the Frappe Framework if you want to use it.

From this, it follows that we can install this Insights app on the Frappe Framework and use it either from ERPNext or from other applications running on Frappe (and even from external data sources).

## What can Frappe Insights be used for?

The main features include:

1. Multiple data sources - Connect to multiple data sources and query them in one place.
2. Complex queries - Write complex queries and get the results in tabular format.
3. Data visualization - Display your data in the form of charts and dashboards.
4. Dashboards - Create dashboards for automatic monitoring of key metrics.

I won&apos;t go into detail about the specific use cases of such an analytics tool, as we already covered that in the Metabase blog post. Instead, let&apos;s explore more interesting aspects of Frappe Insights in the following sections. However, for those thirsty for practical knowledge, I recommend watching the recording of the presentation from the Frappe conference, covering the following topics:

1. Installation
2. Connecting to the database
3. ERPNext database
4. Local SQLite database
5. Remote MySQL/MariaDB database
6. Creating queries
7. Connections (JOIN)
8. Filters
9. Custom expressions
10. Pivot transformation
11. Creating charts
12. Creating summary screens

Source: [https://frappe.io/events/frappe-insights](https://frappe.io/events/frappe-insights)

For those interested in the birth of Frappe Insights and wanting to learn some behind-the-scenes secrets, I recommend the interview with the developer:

[https://frappe.io/blog/product-stories/the-journey-to-insights](https://frappe.io/blog/product-stories/the-journey-to-insights)
</content:encoded></item><item><title>How to Use Downloadable Documents in ERPNext Email Templates</title><link>https://www.monolithon.com/blog/how-to-use-downloadable-documents-in-erpnext-email-templates/</link><guid isPermaLink="true">https://www.monolithon.com/blog/how-to-use-downloadable-documents-in-erpnext-email-templates/</guid><description>In this example (for Delivery Note), you can use the following code to include a link to download the document in your email template</description><pubDate>Tue, 09 May 2023 06:09:00 GMT</pubDate><content:encoded>
Example (for Delivery Note):

```python
{{frappe.get_url()}}/delivery_note/{{doc.name}}?key={{frappe.get_doc(doc.doctype, doc.name).get_signature()}}
```

Source:&lt;a href=&quot;https://discuss.frappe.io/t/how-to-add-document-link-in-email-template/47853/6&quot; rel=&quot;noopener noreferrer&quot;&gt;https://discuss.frappe.io/t/how-to-add-document-link-in-email-template/47853/6&lt;/a&gt;
</content:encoded></item><item><title>New Workflow Builder Arriving in ERPNext</title><link>https://www.monolithon.com/blog/new-workflow-builder-arriving-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/new-workflow-builder-arriving-in-erpnext/</guid><description>Türker TUNALI, our Turkish colleague, spotted the upcoming new Workflow Builder in the ERPNext GitHub repository.</description><pubDate>Tue, 09 May 2023 06:09:00 GMT</pubDate><content:encoded>
Türker TUNALI shared on Twitter the new Workflow Builder coming to ERPNext: [https://twitter.com/turker_tunali/status/1653703276842434560](https://twitter.com/turker_tunali/status/1653703276842434560)

## What&apos;s exciting about this update?

Until now, there has been a possibility for Workflow creation in ERPNext, but with this new enhancement, the process becomes much simpler. It simplifies the planning and makes the operation more transparent, as visual Workflow design is now available, not just in the form of fields and tables as before. Of course, many things were achievable with the previous method, and the details can be found in the documentation here: [https://docs.erpnext.com/docs/v13/user/manual/en/setting-up/workflows](https://docs.erpnext.com/docs/v13/user/manual/en/setting-up/workflows)

With the new visual Workflow Builder, as shown in the image below, we can now design the workflow visually:

![ERPNext new workflow builder](/images/files/ERPNext-new-workflow-builder-01.jpg)

For those who are interested in more details, we recommend checking out the video available on the GitHub Issue:

[https://github.com/frappe/frappe/pull/20880](https://github.com/frappe/frappe/pull/20880)
</content:encoded></item><item><title>Accounting in ERPNext System</title><link>https://www.monolithon.com/blog/accounting-in-erpnext-system/</link><guid isPermaLink="true">https://www.monolithon.com/blog/accounting-in-erpnext-system/</guid><description>I have been owing an article about accounting in the ERPNext system for a long time, where I have compiled some aspects that may be useful to others as well.</description><pubDate>Fri, 07 Apr 2023 06:09:00 GMT</pubDate><content:encoded>
I tried to gather timeless aspects, so I didn&apos;t post this article as a blog post, but you can read it as a static page in the main menu at &lt;a href=&quot;https://www.monolithon.com/accounting&quot; rel=&quot;noopener noreferrer&quot;&gt;ERPNext Accounting&lt;/a&gt;.
</content:encoded></item><item><title>Chromebook and ERPNext</title><link>https://www.monolithon.com/blog/chromebook-and-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/chromebook-and-erpnext/</guid><description>I&apos;ve been planning to write a Chromebook review for a while, and now is the right time because both Chromebook and ERPNext have become excellent choices for both personal and business use.</description><pubDate>Fri, 17 Mar 2023 06:09:00 GMT</pubDate><content:encoded>
Before I share my insights on Chromebook, let me first address how Chromebook relates to ERPNext. For me, there are several connections, so let&apos;s start from the beginning.

### One of the connections is the usability that led me to Linux

For a long time, I only used Windows, and I must admit that I was never really a fan of it. I started with Windows 3.1 and followed the releases until a friend asked me to help her with her netbook, as she wanted to install something on it, but it wasn&apos;t working. That&apos;s when I first encountered the SUSE Linux operating system. At first, I struggled with it, but once I let go of the Windows mindset, I grew to love it. It was secure, stable, and fast, although I must admit that this impression was mostly based on feelings rather than actual measurements. After that, I became a Hungarian UHU Linux user, and later on, I tried Ubuntu and its variants, mostly using the graphical interface, occasionally the command line. However, when I needed a media center or my own cloud storage solution, I turned to the Raspberry Pi and VPSs for different tasks. (I just remembered that I was also surprised by Linux when I worked as an intern in an editorial office, but that&apos;s another story.) Using Linux after Windows always brought a sense of calm, but there were some challenges. One was dealing with graphics card issues, and the other was managing power consumption on laptops.

### How did Linux become a Chromebook?

When I was looking for a laptop without a cooling fan, completely silent, there weren&apos;t many options available. Due to the absence of moving parts, Chromebooks are noiseless, produce less heat, consume less energy, and perhaps more durable as they are also dust-proof. All of these features were exactly what I needed, and since Chromebooks run on Linux, it made it even more appealing. When I compared the performance of Linux running on a Chromebook to my setup at the time, I realized that it wasn&apos;t faster, but it met my needs, so I made the switch. And I haven&apos;t regretted it since. At that time, interestingly enough, I was already using the Chrome operating system and the limited crosh shell, and I didn&apos;t need to install Linux on it, making it even faster.

### What I didn&apos;t know or misunderstood about

**Chromebooks**

Everywhere I read that Chromebooks were only suitable for internet browsing. I interpreted this, along with other internet-related information, to mean that it couldn&apos;t be used without an internet connection. Despite agreeing with the old saying, &quot;Why have power if there&apos;s no internet?&quot; I thought it wouldn&apos;t be suitable for everyday use without a constant internet connection. As it turned out, I was mistaken. While Google Drive is integrated, making it easy to access and upload files stored there, it&apos;s not limited to just that. It offers offline editing for documents and has a local storage folder where we can store and work on files independent of Drive.

Google went even further, as now you can run Linux on a Chromebook not only with the hacks mentioned earlier but also through a built-in Linux container, which can be launched with just a click and currently runs Debian 11 by default. And if that&apos;s not enough, you can also use apps from the Android world on Chromebooks.

What&apos;s missing? Excel. This may be a bigger issue for some, but it&apos;s worth considering if it&apos;s truly necessary. In the past, I used Open/Libre Office on Linux machines, and it can still be run on developer Linux machines. Previously, Excel was available for Android, and it worked perfectly on Chromebooks with a wide range of functionalities. I&apos;m not sure about its current status since Microsoft is moving towards the online world, and the Online Excel, similar to Google Sheets, is becoming more capable with each update. But I understand that some may need the full functionality of Excel. In that case, I recommend using a remote desktop client to access a virtual Windows environment, which can be rented, or even used for free in some cases, without the need to buy a more expensive computer or a Windows/Office subscription.

### Now, let&apos;s get to the connection between ERPNext and Chromebook

We are currently in a phase of IT development where everything has moved to the cloud, whether it&apos;s public or private, and in reality, all we need is a web browser. Unfortunately, there&apos;s not much competition in that area, as the Chrome browser reigns supreme. But what can be faster than a computer optimized for a browser? That&apos;s the Chromebook, and it perfectly complements ERPNext, a cloud-based application that truly requires only a web browser. There&apos;s no need to install anything locally, making them a perfect match.

The other connection is the cost-effectiveness and value for money. Alongside quality, affordability and value for money are essential to me, and both ERPNext and Chromebook offer excellent pricing.

I have another interesting story connecting these two: it&apos;s related to an ERPNext partner, whose website I frequently read. There, I noticed that they are also Chromebook enthusiasts and recommend using ERPNext and Chromebook together due to usability and cost-effectiveness.

From previous articles, you can see that I look for open-source solutions that are preferably free and don&apos;t charge based on the number of users. Even though I use a Chromebook, I avoid Google services whenever possible. There are alternatives available for everything, such as Nextcloud instead of Drive, etc. While these might not be as deeply integrated, they may be sufficient for certain needs. Also, for those who have no privacy concerns and would rather support other developers with their money, as I do, using the free Google products within their usage limits is an option. And when that&apos;s not enough, you can archive data from Drive to Nextcloud, for example.

Chromebooks also have excellent integration with Android smartphones, allowing for synchronization of browser tabs without any additional software, unlocking the laptop using the phone&apos;s fingerprint reader, and sharing notifications, media content, and SMS, etc.

And finally, my favorite part: security. There are no viruses or malware on Chromebooks. It notifies you when an update is available and quickly installs it. There&apos;s no unexpected update that renders the laptop unusable for hours while it installs at the least convenient time. It simply does its job, just like ERPNext.

The drawback? Officially, Chromebooks are not sold in my country, but you can still find ways to obtain one, even with a warranty.
</content:encoded></item><item><title>VueStoreFront - the Swiss Army Knife of Headless E-commerce - Setting Up a Developer Environment</title><link>https://www.monolithon.com/blog/vuestorefront-the-swiss-army-knife-of-headless-e-commerce-setting-up-a-developer-environment/</link><guid isPermaLink="true">https://www.monolithon.com/blog/vuestorefront-the-swiss-army-knife-of-headless-e-commerce-setting-up-a-developer-environment/</guid><description>I have already showcased the flexibility and feature-richness of ERPNext, but I&apos;ve also mentioned that it&apos;s beneficial to use it alongside other software. One such solution is VueStoreFront, a headless e-commerce platform.</description><pubDate>Sat, 25 Feb 2023 06:09:00 GMT</pubDate><content:encoded>
The essence of VueStoreFront is that it&apos;s not a standalone e-commerce platform like Magento or WooCommerce, but it can function as an extension of any software, even non-e-commerce ones, where the necessary e-commerce data is available. This can include an ERP system, like ERPNext. This is very useful because it allows us to quickly build and customize our e-commerce store separately from other systems, gaining a competitive advantage in terms of speed and technology. At the same time, there&apos;s no need to interfere with our business processes as they continue to operate seamlessly in the background. This can also be reversed, as the newer generation of entrepreneurs might start with e-business and launch an online store before establishing a traditional physical store, and they can obtain a complete business software package for that purpose (free and open-source!). The trick is that they all form a unified system, and there&apos;s no synchronization between the two systems. Instead, VueStoreFront directly utilizes and interacts with the data from the backend systems, like product information, images, orders, etc.

You might wonder why VueStoreFront and headless e-commerce are being discussed on the Hungarian ERPNext and Frappe blog. I&apos;m writing about it because I not only consider the entire headless technology very innovative, but it seems that, as I mentioned in previous posts, ERPNext and Frappe developers also like it and are exploring this direction. That&apos;s enough about VueStoreFront and its advantages. Let&apos;s see how to set up a VueStoreFront developer environment in a Debian 11 virtual machine. (Disclaimer: there might be more suitable systems for development, but the Chromebook I use comes with this system, making my life easier. The Chromebook deserves another blog post, or maybe more, which I&apos;m also preparing, but let&apos;s get back to setting up the VueStoreFront developer environment.)

Since the required software versions are not available in the Debian 11 repositories, we need to download some of them.

Install nvm:

```bash
sudo curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
source ~/.bashrc
nvm install node
nvm install --lts / nvm install 18.14.2 / nvm install 16.13.0
```

The last line is enough, as we use version 18.x for the current test project:

```bash
nvm use 18.14.2
```

Install npm:

```bash
nvm install-latest-npm
```

Install yarn:

```bash
npm install --global yarn
```

Don&apos;t forget about environment settings if you have any. After turning off/restarting the virtual machine, you need to add them again, e.g.:

```bash
export NODE_OPTIONS=--openssl-legacy-provider
```

Set up the project in the appropriate git directory/branch:

```bash
yarn
yarn dev
```

After this, the VueStoreFront e-commerce store webpage is accessible by default at the following address:

```
http://localhost:3000/
```

You might need these two commands if something doesn&apos;t work due to version issues:

```bash
node -v
npm rebuild node-sass
rm -rf node_modules/
```
</content:encoded></item><item><title>ERPNext Development and Developer Tools</title><link>https://www.monolithon.com/blog/erpnext-development-and-developer-tools/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-development-and-developer-tools/</guid><description>There are some important things to know about ERPNext development. ERPNext is easily customizable and extensible, allowing users to tailor the system to their unique business needs.</description><pubDate>Sat, 18 Feb 2023 06:09:00 GMT</pubDate><content:encoded>
I have gathered some information about ERPNext development and useful ERPNext-specific developer tools that can help in understanding the fundamentals of an ERPNext development project. However, whether ERPNext development is worth considering and the conditions for it will be revealed towards the end of this post. Let&apos;s explore some key pillars of ERPNext development:

1. Python and Frappé Framework: ERPNext is written in Python and built on the Frappé Framework. The Frappé Framework is an easily learnable framework that enables quick and efficient development of business applications. ERPNext developers must have a thorough understanding of Python and the Frappé Framework and its usage.
1. Database Engine: ERPNext uses MariaDB as its default database engine, which is considered a fork of MySQL. MariaDB is an open-source relational database engine that enables efficient data management. A well-designed database schema, tables, indexes, and relationships contribute to the system&apos;s smooth functioning, and developers should be familiar with them and consider them during development.
1. Modules: ERPNext is built with various modules that handle different business processes. These modules include financial, procurement, sales, and CRM modules, among others. To add new modules or modify existing ones in ERPNext, developers need a comprehensive understanding of the specific processes and the ERPNext module architecture.
1. Integrations: ERPNext can be integrated with other business applications, such as financial applications, webshops, CRM systems, and many more. Integrations are designed using the Frappé Framework, allowing easy and efficient management of data connections between applications.
1. UI Development: The ERPNext user interface consists of various modules with different functions. UI development in ERPNext is carried out using the Frappé Framework and JavaScript frameworks like Vue.js. UI developers must have a good understanding of these frameworks and principles of user experience design.
1. Version Control: ERPNext development requires the use of version control systems. Version control systems allow developers to track changes in the codebase, fix bugs, test new features, and compare different versions. Git is the most commonly used version control system in ERPNext development.
1. Documentation: Thorough documentation is essential during ERPNext development, as it enables developers to understand the code&apos;s functioning and how to modify it. The ERPNext documentation includes development guides, API documentation, data model descriptions, and much more, specific to each version.
1. Testing: Comprehensive testing is crucial during ERPNext development. There are two main types of testing: manual and automated. Manual testing involves human testers testing individual functions and databases within the system to ensure they meet the expectations. Automated testing involves using automated testing tools, allowing more efficient test execution and faster bug identification. Continuous integration testing is also important during ERPNext development. Continuous integration testing automatically checks codebase changes and immediately notifies developers of any issues, helping identify and resolve bugs quickly. Proper testing ensures that the ERPNext system is reliable, stable, and satisfies end-users with its performance.
1. ERPNext development is an exciting challenge that allows developers to customize the system according to specific business needs. However, successful ERPNext development requires not only high-level ERPNext and programming knowledge but also domain-specific expertise, such as financial and accounting knowledge for bookkeeping, or logistics knowledge for inventory management, along with a systems-thinking approach due to the complexity of the system. It&apos;s important to note that developing core program code or forking from the main codebase is almost never recommended for long-term maintainability. Best practices involve overriding with custom modules, which also requires careful consideration. When executed properly, ERPNext application can be even more tailored to meet customer needs and improve the efficiency of business processes.

ERPNext, however, offers an alternative to custom development and coding by allowing customization through the user interface. For instance, you can customize the purchase order to associate it with a cost center or project at the header or line item level. But there&apos;s no direct option to link it to tasks, which can be useful, especially if ERPNext suggests certain expenses for certain conditions.

### Customization Without Development!

When faced with this situation, there&apos;s no need to worry, as you can add custom fields to your system without writing any code. Without your own code, you can still follow the main version updates and version changes easily, as your system remains a &quot;vanilla&quot; ERPNext, free from modifications.

The following screenshot shows how to add this extra field. Of course, if you want other automations, you might need client or server-side scripts, but you still don&apos;t have to develop your own module.

&lt;img src=&quot;./images/files/5cYQcrj.png&quot;&gt;

However, if you do decide to opt for full custom development, you can use the following Frappé and ERPNext developer tools:

&lt;a href=&quot;https://chrome.google.com/webstore/detail/frappeerpnext-tools/mfpfeokebfgddkaemagjigbjkmohmpab&quot; rel=&quot;noopener noreferrer&quot;&gt;https://chrome.google.com/webstore/detail/frappeerpnext-tools/mfpfeokebfgddkaemagjigbjkmohmpab&lt;/a&gt;
&lt;a href=&quot;https://github.com/ElasticRun/barista&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/ElasticRun/barista&lt;/a&gt;
&lt;a href=&quot;https://github.com/ankush/frappe-test-runner&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/ankush/frappe-test-runner&lt;/a&gt;
&lt;a href=&quot;https://github.com/barredterra/frappe_server_performance&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/barredterra/frappe_server_performance&lt;/a&gt;
</content:encoded></item><item><title>ERPNext, BI, and Business Intelligence+Metabase</title><link>https://www.monolithon.com/blog/erpnext-bi-and-business-intelligence-metabase/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-bi-and-business-intelligence-metabase/</guid><description>We should consider ERPNext as a data warehouse and the central storage unit for all important business data.</description><pubDate>Wed, 08 Feb 2023 06:09:00 GMT</pubDate><content:encoded>
In several previous posts, I mentioned that to organize and understand our business processes effectively, we need good software. There are several schools of thought on this matter. I believe that instead of using many isolated solutions, it is more beneficial to choose an integrated system. ERPNext is an excellent choice for this purpose, especially because certain external systems need to be integrated anyway, and ERPNext simplifies this process. This is much easier than trying to connect each element individually and not having a central interface, with data scattered across different systems.

In line with this data warehouse concept, since we store all business data in the ERPNext system, we would like to access and report on it. ERPNext&apos;s reporting functionality allows users (with the appropriate permissions, which could be a separate topic in the context of ERPNext) to collect and analyze a wide range of data, enabling them to make better decisions.

ERPNext&apos;s report functionality enables us to dynamically create reports, sort data, use filters, and make comparisons. All this can be done when the data is within ERPNext, so I recommend using it as the primary data warehouse. ERPNext&apos;s report builder is available by default, and there are a few built-in important reports in the system. Besides the various basic views like List, KanBan, and Dashboard, there&apos;s also a Report view that allows us to create and save our own reports. We can even receive email notifications based on these reports, and we can configure the system to notify us only about specific changes.

ERPNext has gone one step further in the field of business analysis by integrating reports with visualization, as seen in the image above. We can create various charts based on the necessary information and data. However, the world is changing, and so are the demands. Just as we took a brief look into the world of OpenAI, ChatGPT, one of the most modern technologies, in the previous post (&lt;a href=&quot;https://www.monolithon.com/blog/hirek/erpnext-%C3%A9s-a-chatgpt&quot; rel=&quot;noopener noreferrer&quot;&gt;ERPNext and ChatGPT&lt;/a&gt;), I would now like to show you the future of reports:

BI - Business Intelligence - Business Intelligence Software&lt;/&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Today, analysts prefer to ask questions instead of simply receiving reports and immediately getting answers. This approach is followed by most business intelligence software, such as the well-known PowerBI. However, since I prefer free and open-source software solutions, I recommend Metabase for this purpose. It&apos;s also easy to connect Metabase with ERPNext, and you can get answers to your questions or even create reports with Metabase, possibly more easily than with ERPNext.

Moreover, what&apos;s also very useful is that we can use Metabase, connected to ERPNext, not only for data consumption, as described in this post: &lt;a href=&quot;https://discuss.frappe.io/t/guide-how-to-install-metabase-dashboard-along-with-erpnext-on-ubuntu-18-04-server/53075&quot; rel=&quot;noopener noreferrer&quot;&gt;https://discuss.frappe.io/t/guide-how-to-install-metabase-dashboard-along-with-erpnext-on-ubuntu-18-04-server/53075&lt;/a&gt;&lt;/p&gt;&lt;p&gt;But we can also display reports and data created in Metabase within ERPNext, so we can use a powerful business intelligence BI software without leaving ERPNext. The details of this solution can be found here: &lt;a href=&quot;https://github.com/pipech/frappe-metabase&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/pipech/frappe-metabase&lt;/a&gt;

&lt;img src=&quot;/images/jF7FETk.jpg&quot;&gt;

Since it was really just a few clicks to connect ERPNext and Metabase, I&apos;ll include a screenshot of the Sales Invoice list in the demo system within Metabase, which comes directly from ERPNext and is updated in real-time. Another exciting aspect of Metabase is that we can work with data coming from multiple data sources simultaneously. This can be useful even in the case of isolated systems or can greatly facilitate the analysis of data coming from external advertising systems that are not connected to the integrated ERPNext. And we haven&apos;t even considered applying artificial intelligence to these data yet. For example, one of the newest products demonstrates using artificial intelligence within a database: &lt;a href=&quot;https://mindsdb.com/natural-language-processing-in-databases&quot; rel=&quot;noopener noreferrer&quot;&gt;https://mindsdb.com/natural-language-processing-in-databases&lt;/a&gt;

efore anyone dives in, it&apos;s worth mentioning that Metabase connects directly to the MySQL database, so it&apos;s better to connect to the test system rather than the live one.
</content:encoded></item><item><title>Why is ERPNext Database Growing and What Can We Do About It?</title><link>https://www.monolithon.com/blog/why-is-erpnext-database-growing-and-what-can-we-do-about-it/</link><guid isPermaLink="true">https://www.monolithon.com/blog/why-is-erpnext-database-growing-and-what-can-we-do-about-it/</guid><description>Typical cloud systems, unlike ERPNext, where providers do not price based on the resources used but on other criteria, also utilize various resources...</description><pubDate>Thu, 17 Nov 2022 06:09:00 GMT</pubDate><content:encoded>
Typical cloud systems, unlike ERPNext, where providers do not price based on the resources used but on other criteria, also utilize various resources. The details of these resource usages are often hidden from users.

ERPNext not only transparently developed the FrappeCloud platform, where the amount of resources used by the ERPNext software is visible, but it also equipped ERPNext itself with a report function so that we can see how much space is occupied in the database.

To access the report, you need to append the following URL to your own ERPNext instance domain: [/app/query-report/Database%20Storage%20Usage%20By%20Tables](/app/query-report/Database%20Storage%20Usage%20By%20Tables)

This is useful because it&apos;s simple, and if we find any factors using an unreasonable amount of resources, we can easily change them. The smaller the database, the easier it is to manage tasks such as creating backups or performing updates, which can save us money. For example, we can delete unnecessary versions and disable versioning for certain documents.

And the best part is that in some cases, we don&apos;t even need database operations since, as the meme says, in ERPNext, every doctype can be easily deleted from the interface if we no longer need it.

![Image](/images/cqblbkY.jpg)

Source:
[https://twitter.com/FrappeCloud/status/1582922893968564224](https://twitter.com/FrappeCloud/status/1582922893968564224)
</content:encoded></item><item><title>ERPNext Conference 2021 - November 19-20</title><link>https://www.monolithon.com/blog/erpnext-konferencia-2021-november-19-20/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-konferencia-2021-november-19-20/</guid><description>The ERPNext conference, which was canceled in 2020 due to COVID, is finally back and will be organized by the ERPNext developers at Frappe.</description><pubDate>Sat, 05 Nov 2022 06:09:00 GMT</pubDate><content:encoded>
The themes of the 2021 ERPNext conference are grouped into four categories by the organizers.

1. Frappe Framework, the underlying system that powers ERPNext and can also operate independent apps, such as a wiki knowledge base.
2. Frappe Cloud, a cloud hosting service available for all software using Frappe Framework. A detailed post about this will be published in the Hungarian ERPNext blog.
3. ERPNext, the main product of Frappe, which is perhaps the world&apos;s most well-known fully open-source and free ERP system.
4. Community, to which both Frappe and ERPNext owe their existence.

I will provide detailed coverage after the conference, but in advance, it is worth mentioning that there have already been comments in various ERPNext forum topics hinting at changes in ERPNext development, which will hopefully result in an even better product. The themes of the conference also show that the community comes first, and this professionalization, enabling the development of previously unsupported apps, does not affect the business model, which the founder has repeatedly confirmed will remain completely open-source and free.

The detailed schedule of the online conference with the speakers can be found here: &lt;a href=&quot;https://conference.erpnext.com/conference/2021/schedule&quot; rel=&quot;noopener noreferrer&quot;&gt;https://conference.erpnext.com/conference/2021/schedule&lt;/a&gt;&lt;/p&gt;
</content:encoded></item><item><title>ERPNext and the New Shopify eCommerce Integration for Webshops</title><link>https://www.monolithon.com/blog/erpnext-and-the-new-shopify-ecommerce-integration-for-webshops/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-and-the-new-shopify-ecommerce-integration-for-webshops/</guid><description>The ERPNext&apos;s own webshop solution was already available, but now the Shopify integration has reached a new level.</description><pubDate>Thu, 03 Nov 2022 06:09:00 GMT</pubDate><content:encoded>
The version 13 of ERPNext brought many new features, including the previously introduced revamped user interface and mobile app. One of the new developments is the enhanced ERPNext - Shopify integration. Until now, it was available as part of the ERPNext&apos;s core features, but it seems that the development processes have been reconsidered and transformed at the Frappe team, which develops ERPNext. This integration, which was previously an integral part of ERPNext, is now available as a separate &quot;Ecommerce Integration&quot; app on &lt;a href=&quot;https://github.com/frappe/ecommerce_integrations&quot; rel=&quot;noopener noreferrer&quot;&gt;GitHub&lt;/a&gt; and the &lt;a href=&quot;https://frappecloud.com/marketplace/apps/ecommerce-integrations&quot; rel=&quot;noopener noreferrer&quot;&gt;Frappé Cloud Marketplace&lt;/a&gt;.

This new app supports Shopify as well as the system called Zenoti, but the latter is not widespread in Hungary, so let&apos;s focus on the main features available in the Shopify integration:

1. Syncing orders from Shopify to ERPNext.
1. Syncing customer data along with the order.
1. [Optional] Syncing sales invoice and delivery note.
1. [Optional] Scheduled stock synchronization between the two systems.
1. [Optional] Creating products in Shopify from ERPNext and linking the two.
1. Changing the status of a Shopify order to “Cancelled” will also change the status of the order to “Cancelled” in ERPNext.

That’s all for the new Shopify ERPNext integration. A similar transformation happened with the much-loved Woocommerce ERPNext integration, which I will discuss and present the future prospects of these apps in another post.

You can find the detailed setup instructions for the English language Shopify ERPNext integration here:

&lt;a href=&quot;https://docs.erpnext.com/docs/v13/user/manual/en/erpnext_integration/shopify_integration&quot; rel=&quot;noopener noreferrer&quot;&gt;https://docs.erpnext.com/docs/v13/user/manual/en/erpnext_integration/shopify_integration&lt;/a&gt;
</content:encoded></item><item><title>Hungarian Micro-Enterprise Chart of Accounts</title><link>https://www.monolithon.com/blog/hungarian-micro-enterprise-chart-of-accounts/</link><guid isPermaLink="true">https://www.monolithon.com/blog/hungarian-micro-enterprise-chart-of-accounts/</guid><description>Since ERPNext&apos;s foundation is the chart of accounts, we concluded that it would be beneficial to set up the chart of accounts and default accounts based on the Hungarian localization.</description><pubDate>Sun, 23 Oct 2022 06:09:00 GMT</pubDate><content:encoded>
Hi everyone!

Since ERPNext&apos;s foundation is the chart of accounts, we concluded that it would be beneficial to set up the chart of accounts and default accounts based on the Hungarian localization, so that we can build invoicing and other necessary elements on top of it.

We saw the chart of accounts corrected by @krnkris, and we would like to thank him for his great work, as this was a significant step forward and a Hungarian chart of accounts was included in ERPNext:

[https://github.com/frappe/erpnext/issues/7866](https://github.com/frappe/erpnext/issues/7866)

[https://discuss.erpnext.com/t/numbering-of-accounts-in-chart-of-accounts/11101/36](https://discuss.erpnext.com/t/numbering-of-accounts-in-chart-of-accounts/11101/36)

We would like to continue this work together with the community.

After considering the topic thoroughly, we came to the conclusion that it might be best to add an optionally selectable, new chart of accounts to the system, namely the micro-enterprise chart of accounts, which is an attachment to the Government Decree 398/2012. (XII. 20.) on the simplified annual financial statements of micro-enterprises. When choosing the micro-enterprise financial statement option, the company is required to use this chart of accounts.

[https://net.jogtar.hu/jogszabaly?docid=a1200398.kor](https://net.jogtar.hu/jogszabaly?docid=a1200398.kor)

According to the decree, this chart of accounts cannot be modified, except:

&quot;Further detailing of chart of accounts according to Attachment 3 is not considered a deviation.&quot;

Therefore, with this micro-enterprise chart of accounts, we do not aim for full-scale accounting automation, but rather to have the necessary general ledger accounts, so that we can set them as default accounts in the system. Once the Hungarian invoicing compatible with the National Tax and Customs Administration (NAV) is completed, the system will be ready to use out-of-the-box. So, we will only extend it with a few accounts, but to keep it trackable, we will go through an original commit with the original micro-enterprise chart of accounts and then expand it accordingly with a pull request.

Creating this chart of accounts was a considerable effort, so we did it in a way that the necessary JSON file can be automatically generated from a spreadsheet in case of changes. We will use this method to create the second, full-scale chart of accounts because we believe that it is much easier to edit in a spreadsheet than in a coded, difficult-to-read source code.

Of course, the chart of accounts importer can still be used, and certain modifications can be made from the interface if needed, and we will also share how to do this.

Feel free to ask questions, share ideas, and provide suggestions. Thank you very much.

ui: Let&apos;s keep this topic for the micro-enterprise chart of accounts. Let&apos;s use dedicated topics for the &quot;full-scale&quot; general chart of accounts, default accounts, NAV invoicing, etc.

ui2: We published this original post on the forum to facilitate discussions:

[https://discuss.erpnext.com/t/magyar-mikrogazdalkodoi-szamlatukor/96364](https://discuss.erpnext.com/t/magyar-mikrogazdalkodoi-szamlatukor/96364)
</content:encoded></item><item><title>How are Supplier Invoices Entered into ERPNext?</title><link>https://www.monolithon.com/blog/how-are-supplier-invoices-entered-into-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/how-are-supplier-invoices-entered-into-erpnext/</guid><description>There are several ways to do this. One of the simplest is to create a Purchase Invoice from a Purchase Order in the system.</description><pubDate>Sun, 16 Oct 2022 06:09:00 GMT</pubDate><content:encoded>
Another solution is to create a Supplier Invoice based on the received items and the registered Delivery Note in the system.

However, I am writing this post to show the process we have developed in the Monolithon Hungarian ERPNext system, which involves using several other software but results in a very simple, stable, and efficient solution:

On Android, we use the [Microsoft Lens - PDF Scanner](https://play.google.com/store/apps/details?id=com.microsoft.office.officelens&amp;hl=en&amp;gl=US) app to easily and quickly create high-quality images of multi-page invoices, which we save as PDF files on our phones. We have tried many similar programs, but this one is the most user-friendly, surprisingly made by Microsoft.

From here, we don&apos;t have much to do, as the [FolderSync](https://play.google.com/store/apps/details?id=com.microsoft.office.officelens&amp;hl=en&amp;gl=US) Android app synchronizes the invoices to the [Nextcloud](https://nextcloud.com/) system in the background, from where [n8n](https://n8n.io/cloud?ref=monolithon&amp;utm_source=affiliate) sends them to the email inbox reserved for receiving incoming invoices, which ERPNext scans.

This way, we can manually attach the received invoice images to the Supplier Invoice in ERPNext. This is useful, for example, when we automatically download supplier invoices from the National Tax and Customs Administration (NAV) in bulk, and they are already in the system, and we just want to attach the synchronized invoice images.

Alternatively, for lower invoice volumes, the process can be reversed. We can use the soon-to-be-ready solution, which will allow ERPNext to automatically prepare a Supplier Invoice from the email received in the inbox reserved for invoices. We can then manually select/create the supplier on the prepared document and copy the unique invoice (line) number from the received PDF document - for example, using this [chrome extension](https://chrome.google.com/webstore/detail/copyfish-%F0%9F%90%9F-free-ocr-soft/eenjdnjldapjajjofmldgmkjaienebbj) - and then automatically fetch the invoice data from the NAV system with the update button.

It may seem a bit long when written down, but you will see in the video how convenient it is in practice because we combined the processing of PDFs directly received from suppliers via email with the automatic upload of documents we photographed, and we even skipped the expensive OCR because we actually don&apos;t need it, although we could easily integrate it into n8n or ERPNext if needed.

Update:

In most cases, the Office Lens Android app includes the OCR function, as it generates searchable PDFs in most cases. Except for poor-quality images, the app won&apos;t process the text in the image. ;)
</content:encoded></item><item><title>ERPNext EU VAT Number Verification</title><link>https://www.monolithon.com/blog/erpnext-eu-vat-number-verification/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-eu-vat-number-verification/</guid><description>ERPNext Hungarian invoicing has many parts due to the complexity of the topic. When dealing with EU partners, EU VAT number verification is a crucial step.</description><pubDate>Tue, 11 Oct 2022 06:09:00 GMT</pubDate><content:encoded>
As I showed in the previous post about the functionality of the ERPNext Hungarian invoicing&apos;s connection to the Hungarian National Tax and Customs Administration (NAV), now I will show you how we can easily record and verify EU company data based on the EU VAT number using the VIES system. (Technically, this is an option, but legally, as suppliers, we are obliged to verify our customers). It&apos;s not perfect yet because not all member states, like Hungary, provide a separate postal code and city to the VIES system, but in some countries, this data is available, so we are still refining this part. However, similar to the ERPNext Hungarian invoicing&apos;s data retrieval from NAV, from now on, the data of EU partners can also be retrieved and verified, reducing the need for additional clicks or manual work and minimizing the possibility of errors.

&lt;img src=&quot;/images/GaTn0ke.gif&quot;&gt;
</content:encoded></item><item><title>ERPNext Hungarian National Tax and Customs Administration (NAV) Online Invoice Preview</title><link>https://www.monolithon.com/blog/erpnext-magyar-nav-online-invoice-preview/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-magyar-nav-online-invoice-preview/</guid><description>This is how creating customers/suppliers works in ERPNext. We retrieve data from the Hungarian NAV online invoice system based on the VAT number. This forms the foundation of ERPNext Hungarian NAV compliant invoicing.</description><pubDate>Sat, 01 Oct 2022 06:09:00 GMT</pubDate><content:encoded>
More details coming soon :)

In the meantime, you can see it in action here:

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;/images/jFrMpG9.gif&quot;&gt;&lt;/p&gt;
</content:encoded></item><item><title>Custom Print Formats and Translations in ERPNext</title><link>https://www.monolithon.com/blog/custom-print-formats-and-translations-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/custom-print-formats-and-translations-in-erpnext/</guid><pubDate>Thu, 29 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
It is good to know that in ERPNext, custom print formats do not automatically display the header and footer. You can set the header as follows:

```
{% if letter_head and not no_letterhead -%}
{% if print_settings.repeat_header_footer %}
   &lt;br&gt;  &lt;div class=&quot;letter-head&quot;&gt;{{ letter_head }}&lt;/div&gt;
{%- endif %}{%- endif %}
```

You should follow a similar approach for the footer.

However, one thing to keep in mind is that the system offers translations only for the built-in (Standard) print formats. If you create a custom print format (based on an existing one), the labels must be entered in English as follows:

```
{{ _(&quot;Field Label Text in English&quot;) }}
```

Later, you can use the ERPNext built-in translation tool to translate the labels into your desired language.
</content:encoded></item><item><title>Upgraded monolithon.com to ERPNext 14.0 Version</title><link>https://www.monolithon.com/blog/erpnext-140-version-upgraded-to-the-monolithoncom/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-140-version-upgraded-to-the-monolithoncom/</guid><description>The Hungarian ERPNext and Frappe portal is now running on version 14.</description><pubDate>Wed, 28 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
As usual, I followed the news and developments about ERPNext and Frappe version 14 even before its release, and I couldn&apos;t wait to try it out. After getting acquainted with the developer version, I also tested the official release, and although I didn&apos;t encounter any issues, as is advisable in such cases, we didn&apos;t immediately upgrade to the latest version. As I mentioned in the &lt;a href=&quot;https://www.monolithon.com/blog/hirek/erpnext-14-megjelen%C3%A9s&quot; rel=&quot;noopener noreferrer&quot;&gt;previous post&lt;/a&gt;, there were no issues with new installations, but a few bugs appeared during the upgrade from the previous version.

Now, it seemed like enough time had passed for any potential bugs to be fixed, so we decided to proceed with the upgrade today. Normally, the &lt;a href=&quot;https://frappecloud.com/dashboard/signup?referrer=b411e290&quot; rel=&quot;noopener noreferrer&quot;&gt;Frappe Cloud&lt;/a&gt; handles this for us, which used to require a support ticket from them in the past, but now it&apos;s automated. You can specify the scheduled date for the ERPNext/Frappe upgrade.

I did the same, but unfortunately, I wasn&apos;t successful. The reason was that due to a certain customization, the automatic upgrade to the new version didn&apos;t work. The other aspect that made the current upgrade from version 13 to 14 special was that the ERPNext previously included all packages and modules, such as the HR app, which is now a separate, but related package. So, these two minor issues made the version upgrade a bit more complicated, but we still finished it in just two hours :)

For some systems, even the backup wouldn&apos;t be completed in two hours, not to mention the costs involved. And the upgrade to version 15 is expected to be even simpler and faster.

Despite mentioning the &lt;a href=&quot;https://www.monolithon.com/blog/hirek/zero-downtime&quot; rel=&quot;noopener noreferrer&quot;&gt;zero-downtime&lt;/a&gt; feature in the previous article, which was introduced in version 14, making it available for monolithon.com, there was no downtime during this upgrade because there were no transactions during the two hours of transition. So, for example, the website remained accessible throughout the process, and the only thing that needed to be updated was the domain record, which was done in less than a minute thanks to &lt;a href=&quot;https://www.cloudflare.com/&quot; rel=&quot;noopener noreferrer&quot;&gt;Cloudflare&lt;/a&gt;.

As can be seen on our system status page: &lt;a href=&quot;https://status.monolithon.com&quot; rel=&quot;noopener noreferrer&quot;&gt;https://status.monolithon.com&lt;/a&gt;
</content:encoded></item><item><title>ERPNext Conference 2022 Organized by the Frappe Team</title><link>https://www.monolithon.com/blog/erpnext-conference-2022-organized-by-the-frappe-team/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-conference-2022-organized-by-the-frappe-team/</guid><description>This year, the ERPNext conference organized by Frappe emphasized in-person presence, and there was no online broadcast. However, they recorded various high-quality presentations, which will be edited and published later. Once they become available, I will share more information. For now, we could get a glimpse of the presentations on Twitter, as the conference program covered various topics</description><pubDate>Mon, 26 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/erpnext-konferencia-2022-a-frappe-csapat-szervezésében.jpg&quot;&gt;

This year, the ERPNext conference organized by Frappe placed emphasis on in-person attendance, and there was no online broadcast. However, they recorded various high-quality presentations, which will be edited and published later. Once they become available, I will share more information. For now, we could get a glimpse of the presentations on Twitter, as the conference program covered various topics: &lt;a href=&quot;https://conference.erpnext.com&quot; rel=&quot;noopener noreferrer&quot;&gt;https://conference.erpnext.com/&lt;/a&gt;

One highlight was the inclusion of several headless presentations alongside various introductions and feature demonstrations. Another important aspect was that although version 14 broke away from the monolithic development principle, as I mentioned before, it moved towards a module-based development concept: not only do they maintain the concept of ERPNext being a full-featured free and open-source ERP system, but they also structure the modules in a way that they can be used independently. A good example is the HR app presented at the conference, which can be used separately but is well integrated with ERPNext, as well as the Desk (helpdesk, ticketing) system. The third important point is the rapid development of Frappe Cloud and the related information, such as serving 350 million requests per month and the introduction of a new independent server availability. These two aspects demonstrate the reliability of the service and make it worth considering both Frappe and ERPNext alongside Frappe Cloud. Of course, they also presented other new products, such as Gameplan, an internal communication solution, but for now, I&apos;ll stick with Discord, as I wrote earlier about ERPNext-Discord co-use.

Hopefully, I&apos;ll be able to share more personal experiences next year.
</content:encoded></item><item><title>Indexing the ERPNext Website on Google</title><link>https://www.monolithon.com/blog/indexing-the-erpnext-website-on-google/</link><guid isPermaLink="true">https://www.monolithon.com/blog/indexing-the-erpnext-website-on-google/</guid><description>Our website has been indexed by Google so far, as it was not blocked. But there are ways to improve it further.</description><pubDate>Mon, 26 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/erpnext-weboldal-google-indexelése.png&quot;&gt;

One of our colleagues encountered difficulties with indexing the ERPNext website on Google, so I checked the situation and found that our website has been indexed by Google so far, as it was not blocked. But there are ways to improve it further. There is an option to notify Google of every new content published so that it can crawl and display it as a search result on its search page. I decided to write this article because although this feature exists, the documentation is incomplete. If we want to enable this indexing, we first need to set up Google services within our ERPNext system, and for this, we also need to configure certain things in the Google Developer Console, which is well documented. However, besides using the credentials for címtár, naptár, map, drive API, and Google OAuth, we also need to enable the Indexing API. Once this is done, the crucial step is to set the following as the Authorized Redirect URIs within the OAuth 2.0 Client IDs of the used credentials:

```plain
https://www.monolithon.com/?cmd=frappe.website.doctype.website_settings.google_indexing.google_callback
```

However, this has changed, and for version 14.0, you will need the following URL:

```
https://www.monolithon.com/api/method/frappe.integrations.google_oauth.callback
```

Of course, replace the domain &lt;a href=&quot;http://www.monolithon.com&quot; rel=&quot;noopener noreferrer&quot;&gt;www.monolithon.com&lt;/a&gt; with your own.
</content:encoded></item><item><title>Analytical Accounting, Cost Centers, and Profit Centers in ERPNext</title><link>https://www.monolithon.com/blog/analytical-accounting-cost-centers-and-profit-centers-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/analytical-accounting-cost-centers-and-profit-centers-in-erpnext/</guid><pubDate>Sat, 10 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
This is just a short note in response to a frequently asked question about how to correct the cost center fields on submitted documents, typically on invoices, when they are missing or set incorrectly.

The general answer to this is that it cannot be done. This is because ERPNext is based on a double-entry accounting system, which must ensure the integrity of the data. Also, these documents should ideally be submitted after careful review by someone familiar with the specific area to ensure they are error-free. Alternatively, you can set up the automation correctly to allow users without specific knowledge to submit documents they are entitled to. Thus, correcting the cost center setting of the original transaction is not possible.

What options do we have to handle this limitation then?

One option is to void the incorrect document and create a new one with the correct cost center information, keeping the original date. However, this can be done correctly only if the period has not been closed yet.

Another option is to create a journal entry that corrects the error.

Tip: The third option, which is the reason for the existence of this short ERPNext Hungarian knowledge base article, is to use the &quot;Accounting Dimensions&quot; feature as an alternative. This feature allows us to make changes to submitted documents retroactively. This is a good solution because, in fact, the cost center is one of these accounting dimensions, just a special one. Therefore, we can easily achieve the desired goal by using the &quot;Accounting Dimensions&quot; feature, but it requires setting up the appropriate accounting dimensions for our organization in advance, beyond just cost centers.
</content:encoded></item><item><title>New ERPNext Feature Zero Downtime Operations</title><link>https://www.monolithon.com/blog/zero-downtime/</link><guid isPermaLink="true">https://www.monolithon.com/blog/zero-downtime/</guid><description>For an ERP and business management system, it is critical to be always available and functional when needed. The need for this depends on the peculiarities of the business.</description><pubDate>Sat, 10 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
![Image](/images/zero-downtime.jpg)

For an ERP and business management system, it is critical to be always available and functional when needed. The need for this depends on the peculiarities of the business. In the industry, we have been talking about 24/7 operations for a long time, but when is it possible to keep a continuously evolving system up-to-date without missing out on emerging and useful features?

This is where the integrated solution in the Frappe framework, which is also used by ERPNext, comes into play by introducing the read-only mode for systems under maintenance.

What does this mean?

Traditionally, during updates and maintenance, ERPNext and Frappe were not accessible to users. This new feature now allows limited access to the system even during maintenance. Users can log in and access data but cannot make any changes or enter new transactions to maintain data consistency.

So, is this a true zero-downtime solution?

Indeed, it is not entirely zero-downtime, but we mention it this way because previously, even backing up larger websites could take longer, and the site was completely unavailable during that time. However, this new solution addresses such issues. It also makes backup processes safer, as there will not be situations where data is being entered while backups are taking place, which could result in faulty backups that would be difficult to use if needed.

Regardless of the new solution, it is still advisable to schedule updates and maintenance carefully and conduct experiments on a test system first. Only perform changes on the live system once you have a working backup.
</content:encoded></item><item><title>MNB Exchange Rates in ERPNext System</title><link>https://www.monolithon.com/blog/mnb-exchange-rates-erpnext-system/</link><guid isPermaLink="true">https://www.monolithon.com/blog/mnb-exchange-rates-erpnext-system/</guid><description>The use of ERPNext system in Hungarian and compliance with Hungarian regulations involve various localization tasks. One of these tasks is handling MNB exchange rates. Let&apos;s explore the solution!</description><pubDate>Sun, 04 Sep 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/mnb-árfolyamok-erpnext-rendszerben.png&quot;&gt;

There was a previous post about exchange rates where I presented the basic ERPNext exchange rate API connections, which was particularly useful for those who want to use the exchange rates from the European Central Bank since they declared it in their accounting policy and to the National Tax and Customs Administration (NAV). There can be advantages and disadvantages to this, just as with using your own bank&apos;s exchange rates. The important thing is that ERPNext offers options for everything, as you can manually enter any exchange rate, but who wants to manually enter exchange rates when they can be automatically retrieved from the appropriate source, such as the MNB webservice, and it&apos;s free?

Since most companies use MNB exchange rates, you can say it&apos;s the standard, so even though I recommended the simpler EKB solution, we can&apos;t avoid the MNB exchange rates. Therefore, one of the first steps in implementing the features of my ERPNext Hungarian invoicing solution was to develop MNB integration. As stated on the website, the ERPNext Hungarian invoicing solution will be available soon, and one of its components is the management of MNB exchange rates. This post is to announce that this feature is already working. Currently, it works on SI/PI (Sales Invoice/Purchase Invoice) documents, which means sales and purchase invoices, but the essential part is the established API connection, which can be easily integrated into other places, such as recording payments, etc. This is more like a proof of concept, i.e., a feasibility study, so it doesn&apos;t block the entire invoicing service if it cannot be realized for some reason. However, it is completed and working, and it can be done. What&apos;s even better is that I made this optional at the company level, meaning that for those who have multiple companies, domestic or even foreign ones, they can work with two separate exchange rate providers for the two companies.

Here&apos;s the setting where you can choose which provider to use instead of the default exchange rate provider:

&lt;img src=&quot;/images/5qr71Fp.jpg&quot;&gt;
</content:encoded></item><item><title>ERPNext Google Calendar Synchronization</title><link>https://www.monolithon.com/blog/erpnext-google-calendar/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-google-calendar/</guid><description>Synchronizing ERPNext with Google Calendar has been possible for a long time, but there is still room for improvement. Let me show you how!</description><pubDate>Wed, 24 Aug 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/erpnext-google-naptar.png&quot;&quot;&gt;

Most of us use calendars in both our business and personal lives. In fact, usually more than one. Regardless of whether we manage our business or personal finances in any system, we usually have our own calendar. The same is true for ERPNext, which is why the Frappe team, who developed ERPNext, thought about enabling synchronization between ERPNext and Google Calendar from the very beginning.

Typically, we use Google Calendar alongside other software because it&apos;s a great place to see or even manage all entries from our various calendars in one place.

How is this possible in ERPNext?

As described in the documentation, it can easily be set up to send events created in the ERPNext calendar to our Google Calendar, and vice versa. Details are available in the documentation, and if anyone needs help, I&apos;m happy to provide a Hungarian tutorial or assist in the setup: &lt;a href=&quot;https://docs.erpnext.com/docs/v14/user/manual/en/erpnext_integration/google_calendar&quot; rel=&quot;noopener noreferrer&quot;&gt;https://docs.erpnext.com/docs/v14/user/manual/en/erpnext_integration/google_calendar&lt;/a&gt;

If this is so simple, why write a post about it?

Keen readers may have noticed that I mentioned calendar synchronization above, and ERPNext has many DocTypes/ERPNext documents that have some (configurable) date fields. For example, a ToDo or a project, or even a task can have multiple date fields, such as when marking intervals. However, these are not calendar entries in ERPNext, even if they can be viewed in the calendar view. What can be done about this? By default, ERPNext does not offer the possibility to display these entries from ERPNext&apos;s own calendar, so they cannot be synchronized with an external calendar either from there or from the standalone calendar view.

However, many people, including myself, may need this feature, so I&apos;ll explain how to handle it. The basic assumption, which is why I consider myself an ERPNext evangelist, is to choose a suitable system in which we can store/manage most things, but this system should be easily integrable with other programs. On one hand, it&apos;s worth using specialized software for many tasks, and on the other hand, unavoidable integrations exist, such as the &lt;a href=&quot;https://www.monolithon.com/invoicing&quot; rel=&quot;noopener noreferrer&quot;&gt;ERPNext to NAV online invoicing&lt;/a&gt; integration in Hungary. I must add that we need software that supports direct integrations _easily_. (And at the very minimum, we also need a password manager and a communication platform like &lt;a href=&quot;https://www.monolithon.com/blog/news/erpnext-chat-solutions&quot; rel=&quot;noopener noreferrer&quot;&gt;Discord, as I mentioned in a previous post&lt;/a&gt;, to make task handling seamless, but I&apos;ll talk about those later.)

Okay, but why is using an integration software good? It saves us from having to develop everything in ERPNext when it already has a great API. Additionally, it helps maintain the advantages of easy updates and version changes. I&apos;m specifically referring to integration software and not platforms because I recommend using free and open-source software like ERPNext instead of paid platforms like Integromat or Zapier, which are available.

**For the impatient, this is where it starts: How to set up ERPNext and Google Calendar synchronization for ToDo ERPNext documents with the help of n8n integration software**

I&apos;m skipping the basics, such as needing an &lt;a href=&quot;https://n8n.io/cloud?ref=monolithon&amp;amp;utm_source=affiliate&quot; rel=&quot;noopener noreferrer&quot;&gt;n8n system&lt;/a&gt; and ERPNext, and the need to generate a token (API key &amp;amp; secret pair) for the user within ERPNext. I&apos;m happy to help with that if needed.

The key is that once you have everything set up, all you need is the built-in ERPNext and Google Calendar nodes and a Function node, as you can see in this example documentation: &lt;a href=&quot;https://blog.n8n.io/creating-triggers-for-n8n-workflows-using-polling/&quot; rel=&quot;noopener noreferrer&quot;&gt;https://blog.n8n.io/creating-triggers-for-n8n-workflows-using-polling/&lt;/a&gt;

It looks like this, that&apos;s all:

&lt;img src=&quot;/images/R998Mfa.png&quot;&gt;

You can set a timer to run it every X time or even at specific times. But since you can easily create an ERPNext webhook for a ToDo entry, as we did in a previous post for Discord, I suggest downloading the new ToDo from ERPNext when it is created instead of constantly running n8n to avoid unnecessary executions.

It&apos;s important to note that the function (polling) code in the example documentation above didn&apos;t work properly, so I&apos;m providing the correct version below. It adds all new ToDos to Google Calendar, and in the next run, it only adds the ones that haven&apos;t been added before to avoid multiplication/flooding.

```javascript
const new_items = [];

// Get static data stored with the workflow
const data = this.getWorkflowStaticData(&quot;node&quot;);

data.ids = data.ids || [];

for (let i = 0; i &lt; items.length; i++) {
  // Check if data is already present
  if (data.ids.includes(items[i].json.name)) {
    continue;
  } else {
    // if new data then add it to an array
    new_items.push({
      json: {
        name: items[i].json.name,
        date: items[i].json.date,
        reference_name: items[i].json.reference_name,
        description: items[i].json.description,
      },
    });
  }
}

data.ids = items.map((item) =&gt; item.json.name);

// return new items
return new_items;
```

Stay up to date with ERPNext and your calendar!
</content:encoded></item><item><title>Form Building with ERPNext</title><link>https://www.monolithon.com/blog/form-creation-with-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/form-creation-with-erpnext/</guid><description>Online and, let&apos;s face it, even offline businesses cannot operate without well-formulated questions. There are numerous options available for this purpose.</description><pubDate>Tue, 23 Aug 2022 06:09:00 GMT</pubDate><content:encoded>
With ERPNext, you can create forms, and in fact, you can create forms for almost all the documents available in ERPNext, which you can even display on the ERPNext website. This is not too complicated, but it&apos;s not as straightforward as creating a solution with Google Forms, for example. If you are interested in the details of form building with ERPNext, you can find all the important information in the documentation at the following link:

&lt;a href=&quot;https://docs.erpnext.com/docs/v12/user/manual/en/website/web-form&quot;&gt;https://docs.erpnext.com/docs/v12/user/manual/en/website/web-form&lt;/a&gt;

Besides ERPNext, I am also interested in UX design, and although ERPNext is continuously improving in this area, my experience tells me that a one-size-fits-all tool can never perform as well in certain specific areas as a specialized tool. This is where TypeForm, an online form-building software, comes into play for many people. It is widely used because every detail is optimized to encourage people to fill out the forms created with it. Their mission is well-captured in their slogan &quot;It matters how you ask.&quot; I can relate to this sentiment. However, TypeForm is not cheap, and its free version comes with significant limitations for users. Therefore, I searched for a form-building solution that is also optimized for mobile and conversion (which here refers to form completion) without such restrictions, providing a user experience similar to TypeForm. That&apos;s when I discovered the

&lt;a href=&quot;https://tally.so/?ref=monolithon&quot;&gt;Tally.so form builder&lt;/a&gt;, which you can embed into any website, as shown in the form below.

Give it a try if you haven&apos;t used any of the mentioned form-building solutions before, and you will quickly realize that you also prefer to fill out questionnaires and forms of this type, as after selecting the options, you don&apos;t need to click any further buttons, everything happens quickly and smoothly. The reason I brought up this topic is that in the next blog post, I will actually introduce an ERPNext feature, and you guessed it, it might be related to form building. By the way, here&apos;s another argument for using external software: ERPNext is undoubtedly a secure foundation, where we can import all data from any source, and it&apos;s worth doing so. However, depending on the usage and the users, the ERPNext interface may not be the perfect connection point for everyone. Another example is a headless e-commerce platform, which stands out from its competitors with its speed and search engine optimization. When built on top of ERPNext, the entire business process remains in one place, where you and your employees actually use ERPNext. Only your customers using the headless e-commerce platform encounter a different face of the same data, but presented in a way that provides them with an even better customer experience and brings you more conversions/revenue/profit. But that&apos;s a topic for another time. For now, let&apos;s see the ERPNext feature related to form building in the next blog post...

&lt;iframe src=&quot;https://tally.so/embed/nPAj5m?hideTitle=1&quot; width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; title=&quot;ERPNext Questionnaire&quot;&gt;&lt;/iframe&gt;
</content:encoded></item><item><title>ERPNext 14 Release</title><link>https://www.monolithon.com/blog/erpnext-14-appearance/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-14-appearance/</guid><description>I am delighted to announce that the latest version of ERPNext, ERPNext 14, has been released!</description><pubDate>Mon, 01 Aug 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/files/Screenshot 2022-08-01 at 4.34.44 PM.png&quot;&gt;

We have been following the developments of ERPNext as it is an open-source system, and before its release, we had the opportunity to test ERPNext, so we have already tried out many things even before today&apos;s announcement, but we have not been using it in a live environment yet. Soon, we will have more experience with version 14, which we will share.

In the meantime, here are some highlighted new or improved areas:

The workspaces/screens are now even more customizable using the drag-and-drop method. This way, everyone can tailor the appearance to their own working style for a more comfortable experience.

The customization of PDF printable documents has been further improved, making it even easier to add, remove, and rearrange fields on printable business documents.

The subcontractor module, mainly related to manufacturing, which was quite limited before, is now much more usable.

The organizational structure can now be easily entered, displayed transparently, and even exported.

The capability for stock valuations has been further refined by allowing batch/lot-specific valuations.

In addition, improvements have been made across various areas, from reporting to scrap management, availability tracking, and much more. It is important to highlight the new, simpler solution for BOM updates as well.

My personal favorite is the tab view, which is a real innovation. With a lot of data and fields on each screen, grouping and navigating between them is not always easy, making these tabs very useful in the future. (This is visible in the image above as well). Congratulations on the new features!

I will also report on the update process soon because it should be noted that what I wrote about earlier, the migration of different units to separate modules/apps, will start with this version and must be taken into account during the update.

Details about version 14 can be found here: &lt;a href=&quot;https://erpnext.com/version-14&quot; rel=&quot;noopener noreferrer&quot;&gt;https://erpnext.com/version-14&lt;/a&gt;

Official release notes are available here: &lt;a href=&quot;https://erpnext.com/version-14/release-notes&quot; rel=&quot;noopener noreferrer&quot;&gt;https://erpnext.com/version-14/release-notes&lt;/a&gt;

A complete list of all the changes and improvements is available here: &lt;a href=&quot;https://github.com/frappe/erpnext/releases/tag/v14.0.0&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/frappe/erpnext/releases/tag/v14.0.0&lt;/a&gt;
</content:encoded></item><item><title>ERPNext Ticketing Solutions</title><link>https://www.monolithon.com/blog/erpnext-ticketing-solutions/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-ticketing-solutions/</guid><description>Where there are customers, there are also customer relationships. And this is an integral part of the complete customer experience, making it essential for both customers and customer support staff to care about how customer support is handled.</description><pubDate>Sat, 23 Jul 2022 06:09:00 GMT</pubDate><content:encoded>
What does the team behind ERPNext and Frappe offer for this? As usual, they disrupt the status quo, as they did with the first and only free and open-source ERP system. Ticketing systems, support systems, or customer support systems are one of those areas that exploded with the advent of the internet, the dotcom boom, and perhaps together with the e-commerce frenzy. One of the winners was Zendesk, which was very hard to approach, but FreshDesk also gained significant popularity.

![Image](/images/what-is-hd.png)

What&apos;s new on the Frappe and ERPNext front?

ERPNext has previously offered the ability to manage customer inquiries through the &quot;Issues&quot; interface. This was typically used to handle requests from existing customers. From this, internal tasks (Tasks) could be created and linked to the customer to be assigned to customer managers. The image below shows how it worked, and it still works in the current version 13. Of course, thanks to the flexibility and customizability of ERPNext, it was very easy to expand the basic capabilities with new fields, links to other ERPNext content, or even workflows.

Okay, that&apos;s great, but there&apos;s nothing new. Why is this topic relevant now?

Frappe chose a peculiar way to celebrate. The now 14-year-old Frappe not only opened the code of the entire operational infrastructure of the Frappe Cloud operated by them, details here:

[https://github.com/frappe/press](https://github.com/frappe/press) and [https://github.com/frappe/agent](https://github.com/frappe/agent)

(AGPL v3.0)

But, as they needed a suitable ticketing system for the operation of ERPNext and Frappe Cloud, they not only created it for themselves but also made it available for anyone to use on the [https://frappedesk.com/](https://frappedesk.com/) website.

Currently, Frappe Desk is not yet available on the Frappe Cloud, but it is expected to appear there soon since they have also published it here: [https://github.com/frappe/desk](https://github.com/frappe/desk)

ERPNext and Frappe are unstoppable.

![Image](/images/hero-image.png)
</content:encoded></item><item><title>ERPNext Chat Solutions</title><link>https://www.monolithon.com/blog/erpnext-chat-solutions/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-chat-solutions/</guid><description>Just as ERPNext and IT are in a continuous process of change, the ERPNext chat application has also undergone this evolutionary development.</description><pubDate>Fri, 22 Jul 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/6xo80eZ.png&quot;&gt;

Many people requested an integrated chat in ERPNext, and these words were listened to, and the Frappe team delivered the integrated chat in version 12. It wasn&apos;t perfect, but some chat application was finally available within ERPNext. While some needed it, others didn&apos;t really miss another chat platform that could disturb their focused work.

&lt;img src=&quot;https://github.com/frappe/chat/raw/main/.github/images/guest-form-fill.gif&quot; alt=&quot;Form View&quot;&gt;

What actually triggered the big change in version 14 was the chat app. In version 13, the chat application was no longer part of the ERPNext system but was implemented as a separate app. It was rewritten, improved, but still had some shortcomings. It can be accessed here if someone wants to use it: &lt;a href=&quot;https://github.com/frappe/chat&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/frappe/chat&lt;/a&gt;. However, it&apos;s fair to mention that one of the main reasons why people connect ERPNext with Slack is because the previous version of ERPNext (13) already had the ability to integrate with Slack for website visitors to chat with salespeople. So, it wasn&apos;t that bad. For some, especially in businesses where sales are essential on a priority scale, this feature was really useful.

&lt;img src=&quot;https://a.slack-edge.com/37877b/marketing/img/features/hero/v3/hero-full-ui.jpg&quot; alt=&quot;Slack the product user interface on desktop&quot;&gt;

However, many companies prefer a Slack-like solution, and the previously mentioned ERPNext chat solutions are far from that. That&apos;s why it&apos;s not surprising that many people connected their ERPNext software with Slack. They could do this easily because if you check the current release, the Slack option is already included among the possible channels for notifications (Notifications). (To make it work, you needed to configure a few things, which I won&apos;t go into detail here. It was simple, but due to changes in Slack&apos;s free version, we no longer recommend this. Previously, it was possible to use the free version well for smaller organizations, with the only limitation being the ability to search back for information in a maximum of 10,000 messages. We could live with that, especially because all other messages were still accessible, with scrolling, starring, threads, etc. Now, the free version of Slack only allows you to see messages from the last three months, so it was time to look for a new solution.

&lt;img src=&quot;/images/NwliPMB.png&quot;&gt;

Ta-da! There are many Slack alternatives on the market, free, paid, open-source, decentralized, etc. However, looking for the simplest and most convenient solution, we chose &lt;a href=&quot;https://discord.com/register&quot; rel=&quot;noopener noreferrer&quot;&gt;Discord&lt;/a&gt; because thread management in Discord is similar to Slack, and it&apos;s free without limitations, stable, and fast on all platforms.

That&apos;s nice, but how do you connect it with ERPNext?

ERPNext and Discord can communicate via webhooks. However, the main reason for this post is to share the exact setup because there might be several ways to do this, but only one solution worked for us.

What do you need?

You need to generate a webhook on Discord for the specific channel where you want notifications to appear from your ERPNext system. Create the webhook and don&apos;t forget to save it:

&lt;img src=&quot;/images/1FceOy6.png&quot; &gt;

Then comes the ERPNext side of the setup. The first trick is that I mentioned notifications above, but in reality, you need to configure a Webhook as follows:

&lt;img src=&quot;/images/uGa4xWC.png&quot;&gt;

On this screen, you define under which conditions ERPNext should send a message to Discord. In this example, it sends a message when a Task is created within the ERP &amp; IT Support project. Paste the URL generated in the previous step into the &quot;Request URL&quot; field, set the type to JSON and POST, and in the &quot;Webhook Data&quot; section, add the following:

```
{
  “content”: ”{{ doc.subject }} - {{frappe.utils.get_url_to_form(doc.doctype, doc.name)}}”
}
```

This composes the message to be sent. In this case, it sends the title of the task and the link to the task in ERPNext to the Discord channel:

&lt;img src=&quot;/images/R4HbKxx.png&quot;&gt;

With this, the new automatic notification to Discord is ready. It was worth waiting and not moving to Slack, as we saved one migration. However, everyone should consider whether they can entrust their data to someone else, in this case, Discord. Especially considering that there is no official Export function like in Slack&apos;s case. In our opinion, this is not a problem because, on the one hand, to some extent, it can be handled within the interface, and within the privacy settings, similar to Google data takeout, an external application is available for this task:

&lt;a href=&quot;https://github.com/Tyrrrz/DiscordChatExporter&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/Tyrrrz/DiscordChatExporter&lt;/a&gt;

Happy chatting! (Plus, Discord supposedly already has voice and video calls and screen sharing since it was originally developed for the gaming community).
</content:encoded></item><item><title>Correcting Warehouse Stock and Product Valuation in ERPNext</title><link>https://www.monolithon.com/blog/correcting-warehouse-stock-and-product-valuation-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/correcting-warehouse-stock-and-product-valuation-in-erpnext/</guid><pubDate>Sun, 17 Jul 2022 06:09:00 GMT</pubDate><content:encoded>
During the use of ERPNext, you may encounter special cases like the following:

When implementing ERPNext, you entered a purchase order in a foreign currency (at a net price), but later found out that you didn&apos;t receive the goods. However, the goods still appear in your warehouse. Additionally, other items were received at different prices before and after this incident, and the product valuation should also include shipping and other costs, which are handled by the &quot;Landing Cost&quot; option in ERPNext.

If you were to perform a simple stock adjustment, it would affect the product valuation, as ERPNext does not allow you to enter a custom value. Instead, it would use the automatically calculated value. In this case, since the stock valuation has two components (the stock value and the supplier value), a simple stock adjustment wouldn&apos;t reconcile the supplier value, as it was recorded at a different price.

A possible solution is to create a Material Issue within the warehouse (Stock) to remove the items from the inventory. For the difference amount, use the supplier invoice as a contra entry or, alternatively, use a technical account and then transfer it to the supplier account. Here&apos;s the essence of the solution: use a custom exchange rate to eliminate the difference. This custom exchange rate should not be booked as a usual exchange gain or loss. This approach might also work for warehouse stock adjustments. :)
</content:encoded></item><item><title>Closing a Manufacturing Order with Less Quantity Produced in ERPNext</title><link>https://www.monolithon.com/blog/closing-a-manufacturing-order-with-less-quantity-produced-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/closing-a-manufacturing-order-with-less-quantity-produced-in-erpnext/</guid><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
In ERPNext, when creating a manufacturing order, we need to decide how much we want to produce. The system can help us with determining the quantity to produce, but that&apos;s not what we are looking at right now.

Let&apos;s assume that we want to manufacture 100 pieces of a certain item because that&apos;s usually the quantity we produce. However, during the day, we were only able to manufacture 90 pieces, and we do not want to produce the remaining 10 pieces anymore. After closing the production for the 90 pieces with the &quot;Cancel&quot; button, we don&apos;t want to see this production in the &quot;Cancelled&quot; status. Since we have completed 90 pieces, we want to have it in a &quot;Completed&quot; status.

To achieve this, you can use a clever trick by utilizing multiple warehouses during the manufacturing process. Use a &quot;Finished Goods&quot; warehouse and a &quot;Cancelled&quot; warehouse. In the manufacturing order, move the 90 produced pieces to the &quot;Finished Goods&quot; warehouse and the remaining 10 to the &quot;Cancelled&quot; warehouse. This way, you can have the production in the &quot;Completed&quot; status while indicating that 10 pieces have been cancelled.
</content:encoded></item><item><title>Disposal in the ERPNext system</title><link>https://www.monolithon.com/blog/disposal-in-the-erpnext-system/</link><guid isPermaLink="true">https://www.monolithon.com/blog/disposal-in-the-erpnext-system/</guid><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
Disposal in ERPNext can be solved in several ways.

One of the simplest is scrapping during production, because ERPNext handles this by default. But before that, a scrap warehouse must be created where the goods to be scrapped can be moved during production.

The third solution, which is why we write this trick is the following:

As the first case, here we also need a scrap warehouse, but here we do not use inventory or production, but we do a sale at a lower or zero value. :)
</content:encoded></item><item><title>ERPNext GDPR and Cookie Management</title><link>https://www.monolithon.com/blog/erpnext-gdpr-and-cookie-management/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-gdpr-and-cookie-management/</guid><description>Monolithon.com, the Hungarian ERPNext portal, also uses cookies, as most internet websites do, and according to EU directives, visitors need to be informed about this.</description><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
Handling cookies has not been the complicated part when it comes to informing visitors on our ERPNext website about their usage. The real challenge lies in ensuring that if a visitor does not accept the use of cookies, we genuinely do not use them, and as website operators, we do not have access to certain information. However, this also restricts the options for the visitor, for example, the site may forget products left in the cart, etc.

&lt;img src=&quot;/images/erpnext-gdrp-és-cookie-azaz-süti-kezelés.png&quot;&gt;

Therefore, a solution is needed to manage these aspects together, where, as an ERPNext website operator, we can persuade visitors to allow cookie usage, but until they give consent, we do not load these program codes to comply with regulations. Moreover, it complicates matters to provide the option for visitors to enable some cookies while disabling others. This has not been easy in the past, but luckily, there are several service providers who can handle this for us, and it can be successfully integrated into any website, including the Hungarian ERPNext website.

I examined the following cookie management solutions, but instead of providing a detailed analysis, let&apos;s get straight to the point:

The quickest and simplest way is to integrate the solution from &lt;a href=&quot;https://cookiebot.com&quot; rel=&quot;noopener noreferrer&quot;&gt;https://cookiebot.com/&lt;/a&gt; into our ERPNext website. Although it&apos;s just a few clicks, we still have plenty of options to choose from, even in the free version, which is suitable for websites with up to 100 pages. Even after growth, this seems to be the most cost-effective compared to the others.

With this, there&apos;s no need to spend time programming cookie approvals through Google Tag Manager. Thanks to the clever user interface, the solution guides the customer on what they &quot;should&quot; do, as they cannot access the content of the Hungarian ERPNext website without acceptance, while still complying with the regulations.

UPDATE:

I replaced Cookiebot with the solution from &lt;a href=&quot;https://www.enzuzo.com&quot; rel=&quot;noopener noreferrer&quot;&gt;https://www.enzuzo.com/&lt;/a&gt; because certain measurements were not working correctly.

&lt;a href=&quot;https://cookiebot.com&quot; rel=&quot;noopener noreferrer&quot;&gt;https://cookiebot.com/&lt;/a&gt;
&lt;a href=&quot;https://cookiefirst.com/#pricing&quot; rel=&quot;noopener noreferrer&quot;&gt;https://cookiefirst.com/#pricing&lt;/a&gt;
&lt;a href=&quot;https://www.cookiehub.com/pricing&quot; rel=&quot;noopener noreferrer&quot;&gt;https://www.cookiehub.com/pricing&lt;/a&gt;
&lt;a href=&quot;https://www.osano.com/plans&quot; rel=&quot;noopener noreferrer&quot;&gt;https://www.osano.com/plans&lt;/a&gt;
&lt;a href=&quot;https://app.termly.io/user/products&quot; rel=&quot;noopener noreferrer&quot;&gt;https://app.termly.io/user/products&lt;/a&gt;
&lt;a href=&quot;https://usercentrics.com/pricing&quot; rel=&quot;noopener noreferrer&quot;&gt;https://usercentrics.com/pricing/&lt;/a&gt;
&lt;a href=&quot;https://www.onetrust.com/products/cookie-consent&quot; rel=&quot;noopener noreferrer&quot;&gt;https://www.onetrust.com/products/cookie-consent/&lt;/a&gt;
</content:encoded></item><item><title>ERPNext Hungarian Knowledge Base</title><link>https://www.monolithon.com/blog/erpnext_knowledge_base/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext_knowledge_base/</guid><description>The Hungarian ERPNext knowledge base has been launched. Constantly updated with new content.</description><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
&lt;img src=&quot;/images/Screenshot (73).png&quot;&gt;

Everything you need for your daily ERPNext usage or getting started. The knowledge base is continuously updated. Stay tuned!

&lt;a href=&quot;https://www.monolithon.com/kb/erpnext-beállítások-magyarul&quot; rel=&quot;noopener noreferrer&quot;&gt;The knowledge base is accessible here &amp;gt;&amp;gt;&lt;/a&gt;
</content:encoded></item><item><title>How to fix incorrect product valuation in ERPNext</title><link>https://www.monolithon.com/blog/how-to-fix-incorrect-product-valuation-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/how-to-fix-incorrect-product-valuation-in-erpnext/</guid><description>During the initial implementation of ERPNext, we entered a purchase order in a foreign currency (at a net price). Later, it turned out that we did not receive the goods, but they are still present in our warehouse. Additionally,</description><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
During the use of ERPNext, a special scenario may occur, as follows:

During the initial implementation of ERPNext, we entered a purchase order in a foreign currency (at a net price). Later, it turned out that we did not receive the goods, but they are still present in our warehouse. Additionally, before and after this, various products arrived at different prices, and the product&apos;s value should also include shipping and other costs, which ERPNext handles using the &quot;Landing Cost&quot; option.

If we were to simply perform a stock adjustment, it would affect the product&apos;s value because ERPNext does not allow us to specify a unique value. Instead, it would use the calculated value. (Since accounting always has two sides, the stock value and the supplier&apos;s side, in this case, the calculated stock value wouldn&apos;t match, and it wouldn&apos;t &quot;zero out&quot; the supplier&apos;s side as it was recorded with a different value.)

To solve this, one approach is to create a Material Issue within the warehouse (Stock) and use it to remove the goods from our inventory. We can use the supplier&apos;s invoice as a differential entry, or we can create a technical invoice and then link it to the supplier&apos;s invoice. The crucial point here is that by using a custom exchange rate, the discrepancy can be eliminated. (Of course, we don&apos;t book this under the usual exchange rate loss/gain account. And this approach might even work better than a regular stock adjustment. :)
</content:encoded></item><item><title>Importing Master Data into ERPNext</title><link>https://www.monolithon.com/blog/importing-master-data-into-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/importing-master-data-into-erpnext/</guid><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
There is a detailed description of the general import and export functionality, and also a blog post about it as an appetizer (&lt;a href=&quot;https://www.monolithon.com/blog/hirek/adatszinkroniz%C3%A1l%C3%A1s-egyszer%C5%B1en-az-erpnext-adatimport-funkci%C3%B3j%C3%A1nak-%C3%A9rdekess%C3%A9gei&quot; rel=&quot;noopener noreferrer&quot;&gt;link here&lt;/a&gt;), but now we will focus on an interesting aspect:

Let&apos;s take customer import as an example! In ERPNext, a customer, whether an individual or an organization, is an entity that can have multiple addresses and contacts. Since these are separate entities in ERPNext, they need to be imported separately, and what makes it even more complicated is that they need to be linked together, which can only be done if the entity we want to link to already exists in the system, i.e., it has been created/imported first.

However, there is an exception, which is also a useful tip: If there is a primary contact and address that you want to import for a customer, you can upload it directly during the customer import, so you don&apos;t have to import three separate spreadsheets.

But if a customer has multiple contacts and/or addresses, it is important to follow the following steps:

The &quot;Link Name&quot; column is the key to link these entities. It won&apos;t be filled in the example downloadable spreadsheet (which is recommended to use for importing), but you can fill it manually.

First, create the contacts and customers. Then, using the spreadsheet editor, perform the magic so that when importing the addresses, the &quot;Link Name&quot; column gets populated, linking the imported address to the customer (you enter the customer in this column).

So, first import the customers, then import the addresses.

Fortunately, the import tool tells you quite well what the problem is in case of an error, so you have the opportunity to correct it and try again.
</content:encoded></item><item><title>Manufacturing More Products Than Planned in ERPNext</title><link>https://www.monolithon.com/blog/manufacturing-more-products-than-planned-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/manufacturing-more-products-than-planned-in-erpnext/</guid><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
As a counterpart to the previous tip, there might be situations where you need to manufacture more products than originally planned. For example, this can happen when a certain subassembly arrives in packaging that you want to fully utilize. As a result, you need to produce more finished goods to avoid wasting any partially used materials.

In such a case, you can split the manufacturing order into two steps:

1. First, close the manufacturing order with the original planned quantity.
2. Then, create a stock entry with the type &quot;Manufacture&quot; where you select the materials from the BOM (Bill of Materials) list. Make sure not to link it to the manufacturing order.

By following these steps, you have manufactured more products, and everything is accurately documented. If needed, you can refer to the manufacturing order and stock entry in the comment section for traceability.
</content:encoded></item><item><title>Periodic or Real-Time Inventory Valuation in ERPNext</title><link>https://www.monolithon.com/blog/periodic-or-real-time-inventory-valuation-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/periodic-or-real-time-inventory-valuation-in-erpnext/</guid><pubDate>Thu, 30 Jun 2022 06:09:00 GMT</pubDate><content:encoded>
When using ERPNext, we need to choose between two options: Periodic or Real-Time Inventory Valuation. It is not recommended to switch between these options during operation, so let&apos;s understand what these mean:

Real-Time Inventory Valuation (perpetual inventory) continuously updates the value of our inventory based on recorded economic events (such as procurement, incoming stock, depreciation, sales, etc.). While some companies may require this level of accuracy, for most companies, it is sufficient to perform inventory valuations only a few times a year.

This periodic inventory valuation can be performed anytime, and in some cases, it is mandatory, such as during the annual closing when we need to know the current value of our inventory at that specific point in time. However, it can be done quarterly, monthly, or at any suitable interval.

How does this work in practice?

With periodic inventory valuation, the final inventory value is manually entered into the books after a physical inventory count. As a consequence, until the next physical count, we will see the value that was entered during the previous count, not the current value.

On the other hand, with real-time inventory valuation, the following happens:

Every purchase value (including shipping and other costs - landing costs) is automatically recorded in both the procurement and warehouse value. When the warehouse inventory changes, the value recorded on the purchase invoice transfers to the warehouse inventory, thus updating it to match the closing (current) inventory value.

The calculation is roughly as follows for periodic inventory valuation:

Opening Inventory + Purchases = Inventory Value, which is available for sale.
Available Inventory for Sale - Closing Inventory = Value of sold goods.
</content:encoded></item><item><title>The First New Feature of ERPNext 14</title><link>https://www.monolithon.com/blog/the-first-new-feature-of-erpnext-14/</link><guid isPermaLink="true">https://www.monolithon.com/blog/the-first-new-feature-of-erpnext-14/</guid><description>You can track on GitHub the new features and improvements that are included in the new versions. Now, the limitation of kanban cards has been removed.</description><pubDate>Tue, 12 Apr 2022 06:09:00 GMT</pubDate><content:encoded>
The kanban board has been very useful, as it could be used for various purposes, especially in project management. A new, frequently requested feature has now been implemented by an ERPNext development partner with the support of ERPNext/Frappe developers.

This feature addresses the limitation of what information is displayed on a kanban card. Previously, this information was fixed within ERPNext. That means on every kanban card, only the card name appeared, or in the case of tasks, the name of the task, the assignee, and the priority.

With ERPNext&apos;s new feature, we can now choose what information we want to display on the cards. This can be especially useful, as in a previous project, it would have been beneficial to show identifiers received from an external system on ERPNext kanban cards, but unfortunately, this was not possible. Now, it is possible. I&apos;ll show you how to select new fields in the image below. Of course, there are limitations, as fields with long text or HTML content cannot fit on a card, so these types of fields cannot be selected for display on the card.

![Image 1](/images/8UTvjIn.png)

![Image 2](/images/XSO3Ltr.png)

The forum post:
[https://discuss.erpnext.com/t/improved-kanban-board/88414](https://discuss.erpnext.com/t/improved-kanban-board/88414)

and the GitHub issue link:
[https://github.com/frappe/frappe/pull/16257](https://github.com/frappe/frappe/pull/16257)
</content:encoded></item><item><title>Inventory Valuation in ERPNext System</title><link>https://www.monolithon.com/blog/inventory-valuation-in-erpnext-system/</link><guid isPermaLink="true">https://www.monolithon.com/blog/inventory-valuation-in-erpnext-system/</guid><pubDate>Thu, 07 Apr 2022 06:09:00 GMT</pubDate><content:encoded>
ERPNext provides the capability to handle batch/bundle management. By default, all batches have the same value, but inventory valuation allows you to modify this. The system supports FIFO/LIFO methods for inventory valuation. However, when using the average costing method, it may not yield accurate results even if you perform inventory valuation for each batch because ERPNext updates one batch at a time, leading to inaccurate outcomes.

This article will be further expanded soon.
</content:encoded></item><item><title>Wiki-like Pages Wanted</title><link>https://www.monolithon.com/blog/wiki-like-pages-wanted/</link><guid isPermaLink="true">https://www.monolithon.com/blog/wiki-like-pages-wanted/</guid><description>The demand for creating wiki-like pages has come up multiple times. While this was already possible, there is now an official solution for it.</description><pubDate>Tue, 08 Feb 2022 06:09:00 GMT</pubDate><content:encoded>
![Image 1](/images/wiki-szerű-oldalakat-szeretnék.png)

ERPNext is built on the Frappe framework, where ERPNext is ultimately a collection of apps written for the Frappe framework. As both ERPNext and Frappe have evolved, other apps have been introduced, also built for the Frappe framework. Some of these are stand-alone applications, while others provide additional functionalities to ERPNext.

One such stand-alone application is the Frappe Wiki: [https://frappe.io/wiki](https://frappe.io/wiki), which can work alongside the installed ERPNext. Its strength lies in the simplicity provided by the Frappe framework. Those who try it are likely to love it. It allows managing public documents or creating internal pages. It is continually being developed, and missing features such as complete permissions management are expected to be added soon.

If someone wants to use ERPNext without installing additional apps, there are several solutions for creating a wiki-like experience. One of the most straightforward approaches is to use the &quot;Knowledge Base&quot; menu, where you can create public wiki-like pages on your ERPNext site. This is achieved through the &quot;Website Help Article&quot; option:

![Image 2](/images/M39Wp5r.png)

What if you want to create non-public content but still don&apos;t want to use the Frappe Wiki? In that case, you can use the &quot;Note&quot; feature available in the ERPNext Tools menu, which allows you to create your own private or shared but non-public content.

![Image 3](/images/TEBNJj1.png)

Pro tip: Regardless of the chosen solution, you can use a markdown editor as well :)
</content:encoded></item><item><title>Year-End Task - Managing Exchange Rates in ERPNext</title><link>https://www.monolithon.com/blog/year-end-task-managing-exchange-rates-in-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/year-end-task-managing-exchange-rates-in-erpnext/</guid><description>ERPNext was already capable of managing current exchange rates, but there&apos;s a small change in handling the current conversion rates that is worth considering for planning.</description><pubDate>Sun, 09 Jan 2022 06:09:00 GMT</pubDate><content:encoded>
According to Hungarian regulations, there are three options for managing exchange rates in our accounting:

1. Using the exchange rates defined by the Hungarian National Bank (MNB).
1. Using our bank&apos;s exchange rates.
1. Settling based on the exchange rates of the European Central Bank (ECB).

Since ERPNext automatically fetches exchange rates from the [exchangerate.host](exchangerate.host) system, where the exchange rates of the European Central Bank (ECB) are available (unlike the data obtained from [frankfurter.app](frankfurter.app)), it is advisable to switch to using ECB rates. However, this switch can only be done once a year, so I am writing about it now.

However, we are not entirely ready yet, as ERPNext does not call the ECB rates by default, so some modifications are required. Additionally, it fetches the rates for the current date, which also needs some refinement since the settlement date might not always be the same as the current date.

Of course, you can manually enter any exchange rate into the system at any time, but if you want to automate this process, it&apos;s advisable to follow the method mentioned above to ensure compliance.

Details of the switch to exchangerate.host:
[https://github.com/frappe/erpnext/pull/26237](https://github.com/frappe/erpnext/pull/26237)
</content:encoded></item><item><title>Insight into the Spirit of ERPNext and Frappe</title><link>https://www.monolithon.com/blog/the-erpnext/</link><guid isPermaLink="true">https://www.monolithon.com/blog/the-erpnext/</guid><description>ERPNext is a business software, but the people behind it work every day to create a new organizational culture that makes ERPNext better and better.</description><pubDate>Wed, 15 Dec 2021 06:09:00 GMT</pubDate><content:encoded>
ERPNext is built on the flexible &quot;framework&quot; developed by the ERPNext development team, which is the Frappe framework. In fact, ERPNext is a collection of apps that need to be installed on the Frappe framework. The development of ERPNext was started by Rushabh Mehta along with a few colleagues, and as the company grew, they created the Frappe organization, and the organization evolved and took shape along with the product.

What is this organization like? I may report on that in another post because it&apos;s very interesting how they think about life and work and how they have implemented it at the organizational level based on shared values. But the current post has a specific news:

ERPNext has only one founder, Rushabh Mehta, who decided to grant the title of co-founder to some outstanding colleagues who have been involved in ERPNext development for quite some time.
That&apos;s why we love ERPNext!

I will talk about the other values they represent and how they experiment to build a better product and collaboration later. However, it is clearly visible that their primary goal is not to serve the shareholders, and by ensuring their independence, they can keep ERPNext software free and open, which not many can say about their product. Speaking of shareholders, let me add some technical information to this news since few people know that with ERPNext, you can record information about the enterprise&apos;s owners, shareholders, and share movements, ensuring that up-to-date information is always available alongside other business data stored in ERPNext.

&lt;img src=&quot;https://docs.erpnext.com/files/shareholder.png&quot;&gt;

At the same time, some interesting and reasonable changes have been made in connection with the development of the product, which I will also report on soon.

Congratulations to Nabin Hait!

Source:

&lt;a href=&quot;https://erpnext.com/blog/accounting/the-journey-from-an-accountant-to-a-co-founder&quot; rel=&quot;noopener noreferrer&quot;&gt;https://erpnext.com/blog/accounting/the-journey-from-an-accountant-to-a-co-founder&lt;/a&gt;
</content:encoded></item><item><title>Data Synchronization Made Easy with ERPNext&apos;s Data Import c</title><link>https://www.monolithon.com/blog/data-synchronization-made-easy-with-erpnexts-data-import-functionality/</link><guid isPermaLink="true">https://www.monolithon.com/blog/data-synchronization-made-easy-with-erpnexts-data-import-functionality/</guid><description>Most ERP implementations aim to minimize the use of Excel and automate manual work. But without a (good) data import feature, there is no ERP.</description><pubDate>Mon, 23 Aug 2021 06:09:00 GMT</pubDate><content:encoded>
Why is this post a continuation of the one about form creation? Because I wouldn&apos;t recommend using external software alongside ERPNext if it doesn&apos;t meet two requirements:

1. Offer a quality solution, and ideally the best one available
1. Provide an easy integration solution if needed

In the free version of the form creator presented, there is an option to automatically save the responses received in a Google Sheet spreadsheet.

Why is this interesting and how does it relate?

Because like all (good) ERP/Business/Management software, ERPNext allows for easy data import and export. This is also the case with ERPNext, but the developers have taken it a step further. Instead of just uploading a spreadsheet as seen in competing products, ERPNext provides a truly innovative solution.

Of course, you can stick with the classic and well-established method where you first create a dataset with example data in the ERP interface, for example, a lead in the CRM module, and then export it to use it as an import template.

But what is the extra? Drumroll, please:

In ERPNext, you have the option to import data from an online Google Sheet spreadsheet by simply providing the URL of the online spreadsheet.

Yes, using the &lt;a href=&quot;https://tally.so/?ref=monolithon&quot; rel=&quot;noopener noreferrer&quot;&gt;Tally.so&lt;/a&gt; example again, imagine creating a form where visitors can fill it out, and based on their answers, they receive a rating or some useful content. At the same time, the leadscore technique evaluates the visitors, and a lead is created in the aforementioned Google Sheet spreadsheet. With one click, we can import this new lead into our ERPNext system, along with all the data of the form filler, and from there, the sales colleagues can take the process further within ERPNext.

In addition to the traditional data import process, the import from Google Sheet is also thoroughly documented at the following link:

&lt;a href=&quot;https://docs.erpnext.com/docs/v13/user/manual/en/setting-up/data/data-import&quot; rel=&quot;noopener noreferrer&quot;&gt;https://docs.erpnext.com/docs/v13/user/manual/en/setting-up/data/data-import&lt;/a&gt;
</content:encoded></item><item><title>Woocommerce Integration with ERPNext</title><link>https://www.monolithon.com/blog/woocommerce-erpnext-integration/</link><guid isPermaLink="true">https://www.monolithon.com/blog/woocommerce-erpnext-integration/</guid><description>You might know that ERPNext comes with a built-in Woocommerce integration, which works well, but the devil is in the details.</description><pubDate>Mon, 31 May 2021 06:09:00 GMT</pubDate><content:encoded>
It&apos;s no big secret that the Woocommerce integration was included in ERPNext because Woocommerce is one of the most popular ecommerce solutions integrated into blogging platforms worldwide. But that&apos;s only one part of the story. The other part is that the built-in webshop in ERPNext works only under certain limitations. It might be suitable for B2B service providers because they typically have registered customers, or they manually registered them and granted access to the webshop. However, in the B2C sector, it can be annoying that the mandatory registration interrupts the purchase process, and without it, the purchase cannot be completed. Along with the shortcomings in the shopping cart function, this can significantly reduce the conversion rate.

ERPNext developers are aware of this, which is why it made it to the current roadmap, and there are already developments in this area, details here: [https://discuss.erpnext.com/t/erpnext-roadmap-for-april-2021/73126/3](https://discuss.erpnext.com/t/erpnext-roadmap-for-april-2021/73126/3)

The native Woocommerce integration probably satisfies the basic needs, and as part of the core system, it will likely be a long-term supported feature and collaboration. So, this can be an important aspect when choosing business software. However, it&apos;s also worth considering that this is just a basic integration that synchronizes products and orders. For those who want more advanced features, they will have to look for other solutions.

One option is the ERPNext Shopify Connector, but since Shopify is a paid platform, it might not be everyone&apos;s preference. Therefore, I would recommend an extended Woocomerce integration developed by an external developer. It is capable of synchronizing product variations and warehouse inventory, and experience shows that it works with the latest v13 ERPNext as well.

[https://github.com/Muzzy73/WooCommerceConnector](https://github.com/Muzzy73/WooCommerceConnector)

Note: There are a few more methods for synchronizing webshops and ERPNext, but I will cover those in a separate post.
</content:encoded></item><item><title>ERPNext 13 has been released!</title><link>https://www.monolithon.com/blog/published-by-erpnext-13/</link><guid isPermaLink="true">https://www.monolithon.com/blog/published-by-erpnext-13/</guid><description>ERPNext 13 was officially released a few days ago. We didn&apos;t sleep on it, as we have been using it for a while now.</description><pubDate>Fri, 09 Apr 2021 06:09:00 GMT</pubDate><content:encoded>
As with any software release, there are quite a few bugs reported, but it seems that there are no issues with fresh installations. Those who are planning to upgrade from ERPNext 12 might want to wait a bit until the reported bugs are fixed by the developers. Of course, users can also fix and share the code with the ERPNext community.
</content:encoded></item><item><title>Native Android/iOS App Arriving for ERPNext 13.0</title><link>https://www.monolithon.com/blog/native-android-ios-app-coming/</link><guid isPermaLink="true">https://www.monolithon.com/blog/native-android-ios-app-coming/</guid><description>ERPNext has been doing well in terms of mobile usage on both Android and iOS systems, but now a completely new era begins.</description><pubDate>Wed, 24 Feb 2021 06:09:00 GMT</pubDate><content:encoded>
Unlike the previous mobile app that merely utilized responsive design, which was essentially a wrapped web page, this time it will be renewed as a native app thanks to the ERPNext API. This will enable smoother mobile usability and better utilization of mobile resources, resulting in a more stable and faster performance.

And there&apos;s more. The app will work offline, meaning it will function even with weak or no internet connection. It achieves this by handling synchronization in the background whenever an internet connection is available.

However, I should mention one negative aspect, which is expected to be temporary and might not be well-known by many. The client-side scripts have not been implemented in this new ERPNext mobile app yet, but we hope it will be addressed in the future.

Here are some screenshots of the new ERPNext native mobile application (Android).

## Menu

![Menu](/images/natív-android-ios-app-érkezik.jpg)

## Projects

![Projects](/images/W60474r.jpe)

## Tasks

![Tasks](/images/hKAHTNX.jpe)

## Suppliers

![Suppliers](/images/KPmve8C.jpe)
</content:encoded></item><item><title>ERPNext 13.0 Version Gets a New Look</title><link>https://www.monolithon.com/blog/erpnext-130-version-gets-a-new-look/</link><guid isPermaLink="true">https://www.monolithon.com/blog/erpnext-130-version-gets-a-new-look/</guid><description>The ERPNext interface has always been streamlined, but with further simplification, it can now be considered beautiful as well. Of course, beauty is subjective, but everyone can decide for themselves based on the images.</description><pubDate>Tue, 23 Feb 2021 06:09:00 GMT</pubDate><content:encoded>
## Here are some screenshots of the new look debuting in ERPNext 13.0 version:

&lt;img src=&quot;/images/új-kinézetet-kap-az-erpnext-130-verzió.png&quot;&gt;

&lt;img src=&quot;/images/n8poozx.jpe&quot;&gt;

&lt;img src=&quot;/images/rQEumsm.png&quot;&gt;

&lt;img src=&quot;/images/Nkig4kq.png&quot;&gt;

&lt;img src=&quot;/images/9zMH400.png&quot;&gt;

&lt;img src=&quot;/images/FP2Awuh.png&quot;&gt;

&lt;img src=&quot;/images/8UaySeQ.png&quot;&gt;

&lt;img src=&quot;/images/6DHDi62.png&quot;&gt;

&lt;img src=&quot;/images/Bh9PiHf.png&quot;&gt;

&lt;img src=&quot;/images/TAabxTX.png&quot;&gt;

&lt;img src=&quot;/images/akFwxF8.png&quot;&gt;

&lt;img src=&quot;/images/UP26jaZ.png&quot;&gt;

&lt;img src=&quot;/images/jtZR6dX.png&quot;&gt;

&lt;img src=&quot;/images/h0gJyi2.png&quot;&gt;
</content:encoded></item><item><title>My first blog post on monolithon.com about ERPNext</title><link>https://www.monolithon.com/blog/news-category/</link><guid isPermaLink="true">https://www.monolithon.com/blog/news-category/</guid><description>I created this blog post during the installation of ERPNext, so I&apos;m just modifying it to preserve it for posterity.</description><pubDate>Thu, 09 Apr 2020 06:09:00 GMT</pubDate><content:encoded>
I created this blog post during the installation of ERPNext, so I&apos;m just modifying it to preserve it for posterity. Yes, it was on April 19, 2020, when I started monolithon.com and began using ERPNext for my personal use. At that time, I started using it in a live environment under a different domain after transitioning from another system. Before that, I had experience with several self-installs and cloud-hosted ERPNext instances, but it was during this period that the final idea I had in mind took shape. And I don&apos;t regret it one bit!

In the following posts, I&apos;ll share the news, tips, and tricks about ERPNext.
</content:encoded></item></channel></rss>